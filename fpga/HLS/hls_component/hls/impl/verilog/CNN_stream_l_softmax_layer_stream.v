// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_stream_l_softmax_layer_stream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fc2_embedding_0_dout,
        fc2_embedding_0_empty_n,
        fc2_embedding_0_read,
        fc2_embedding_0_num_data_valid,
        fc2_embedding_0_fifo_cap,
        fc2_embedding_1_dout,
        fc2_embedding_1_empty_n,
        fc2_embedding_1_read,
        fc2_embedding_1_num_data_valid,
        fc2_embedding_1_fifo_cap,
        dout_0_TREADY,
        dout_1_TREADY,
        dout_0_TDATA,
        dout_0_TVALID,
        dout_1_TDATA,
        dout_1_TVALID
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] fc2_embedding_0_dout;
input   fc2_embedding_0_empty_n;
output   fc2_embedding_0_read;
input  [2:0] fc2_embedding_0_num_data_valid;
input  [2:0] fc2_embedding_0_fifo_cap;
input  [31:0] fc2_embedding_1_dout;
input   fc2_embedding_1_empty_n;
output   fc2_embedding_1_read;
input  [2:0] fc2_embedding_1_num_data_valid;
input  [2:0] fc2_embedding_1_fifo_cap;
input   dout_0_TREADY;
input   dout_1_TREADY;
output  [7:0] dout_0_TDATA;
output   dout_0_TVALID;
output  [7:0] dout_1_TDATA;
output   dout_1_TVALID;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fc2_embedding_0_read;
reg fc2_embedding_1_read;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_block_pp0_stage2_subdone_grp3_done_reg;
reg    ap_block_pp0_stage2_subdone_grp3;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage2_subdone_grp4_done_reg;
reg    ap_block_pp0_stage2_subdone_grp4;
reg    ap_enable_reg_pp0_iter0_reg;
reg    fc2_embedding_0_blk_n;
reg    ap_done_reg;
wire    ap_block_pp0_stage0_grp1;
reg    ap_block_pp0_stage0_subdone_grp1_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp1;
reg    ap_block_pp0_stage0_subdone;
reg    fc2_embedding_1_blk_n;
wire    ap_block_pp0_stage0_grp2;
reg    ap_block_pp0_stage0_subdone_grp2_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp2;
reg    dout_0_TDATA_blk_n;
wire    ap_block_pp0_stage2_grp3;
wire    ap_block_pp0_stage0_grp5;
reg    ap_block_pp0_stage0_subdone_grp5_done_reg;
reg    ap_block_pp0_stage0_subdone_grp5;
reg    dout_1_TDATA_blk_n;
wire    ap_block_pp0_stage2_grp4;
wire    ap_block_pp0_stage0_grp6;
reg    ap_block_pp0_stage0_subdone_grp6_done_reg;
reg    ap_block_pp0_stage0_subdone_grp6;
wire   [31:0] grp_fu_115_p2;
reg   [31:0] reg_132;
wire    ap_block_pp0_stage2_11001_grp0;
reg    ap_block_pp0_stage2_subdone_grp0_done_reg;
wire    ap_block_pp0_stage2_subdone_grp0;
reg    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
reg    ap_block_pp0_stage0_subdone_grp0;
reg   [31:0] fc2_embedding_0_read_reg_559;
reg    ap_block_state1_pp0_stage0_iter0_grp1;
reg    ap_block_pp0_stage0_11001_grp1;
reg   [31:0] fc2_embedding_1_read_reg_564;
reg    ap_block_state1_pp0_stage0_iter0_grp2;
reg    ap_block_pp0_stage0_11001_grp2;
wire   [31:0] grp_fu_119_p1;
reg   [31:0] vf_reg_569;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] vf_reg_569_pp0_iter3_reg;
reg   [31:0] vf_reg_569_pp0_iter4_reg;
reg   [31:0] vf_reg_569_pp0_iter5_reg;
reg   [31:0] vf_reg_569_pp0_iter6_reg;
reg   [31:0] vf_reg_569_pp0_iter7_reg;
reg   [31:0] vf_reg_569_pp0_iter8_reg;
reg   [31:0] vf_reg_569_pp0_iter9_reg;
reg   [31:0] vf_reg_569_pp0_iter10_reg;
reg   [31:0] vf_reg_569_pp0_iter11_reg;
reg   [31:0] vf_reg_569_pp0_iter12_reg;
reg   [31:0] vf_reg_569_pp0_iter13_reg;
reg   [31:0] vf_reg_569_pp0_iter14_reg;
reg   [31:0] vf_reg_569_pp0_iter15_reg;
reg   [31:0] vf_reg_569_pp0_iter16_reg;
reg   [31:0] vf_reg_569_pp0_iter17_reg;
reg   [31:0] vf_reg_569_pp0_iter18_reg;
reg   [31:0] vf_reg_569_pp0_iter19_reg;
reg   [31:0] vf_reg_569_pp0_iter20_reg;
reg   [31:0] vf_reg_569_pp0_iter21_reg;
reg   [31:0] vf_reg_569_pp0_iter22_reg;
reg   [31:0] vf_1_reg_575;
reg   [31:0] vf_1_reg_575_pp0_iter3_reg;
reg   [31:0] vf_1_reg_575_pp0_iter4_reg;
reg   [31:0] vf_1_reg_575_pp0_iter5_reg;
reg   [31:0] vf_1_reg_575_pp0_iter6_reg;
reg   [31:0] vf_1_reg_575_pp0_iter7_reg;
reg   [31:0] vf_1_reg_575_pp0_iter8_reg;
reg   [31:0] vf_1_reg_575_pp0_iter9_reg;
reg   [31:0] vf_1_reg_575_pp0_iter10_reg;
reg   [31:0] vf_1_reg_575_pp0_iter11_reg;
reg   [31:0] vf_1_reg_575_pp0_iter12_reg;
reg   [31:0] vf_1_reg_575_pp0_iter13_reg;
reg   [31:0] vf_1_reg_575_pp0_iter14_reg;
reg   [31:0] vf_1_reg_575_pp0_iter15_reg;
reg   [31:0] vf_1_reg_575_pp0_iter16_reg;
reg   [31:0] vf_1_reg_575_pp0_iter17_reg;
reg   [31:0] vf_1_reg_575_pp0_iter18_reg;
reg   [31:0] vf_1_reg_575_pp0_iter19_reg;
reg   [31:0] vf_1_reg_575_pp0_iter20_reg;
reg   [31:0] vf_1_reg_575_pp0_iter21_reg;
reg   [31:0] vf_1_reg_575_pp0_iter22_reg;
wire   [31:0] grp_fu_127_p2;
reg   [31:0] tmp_reg_581;
reg   [31:0] tmp_s_reg_586;
reg   [31:0] tmp_s_reg_586_pp0_iter10_reg;
reg   [31:0] tmp_s_reg_586_pp0_iter11_reg;
reg   [31:0] tmp_s_reg_586_pp0_iter12_reg;
wire   [31:0] grp_fu_110_p2;
reg   [31:0] fsum_reg_591;
reg   [31:0] fsum_1_reg_596;
wire   [31:0] grp_fu_122_p2;
reg   [31:0] fsum_2_reg_601;
reg   [0:0] tmp_1_reg_606;
wire   [7:0] trunc_ln299_2_fu_168_p1;
reg   [7:0] trunc_ln299_2_reg_611;
wire   [0:0] icmp_ln299_fu_180_p2;
reg   [0:0] icmp_ln299_reg_616;
wire   [0:0] icmp_ln299_1_fu_200_p2;
reg   [0:0] icmp_ln299_1_reg_623;
wire   [0:0] icmp_ln299_2_fu_206_p2;
reg   [0:0] icmp_ln299_2_reg_629;
wire   [7:0] select_ln299_fu_232_p3;
reg   [7:0] select_ln299_reg_634;
wire   [0:0] icmp_ln299_4_fu_256_p2;
reg   [0:0] icmp_ln299_4_reg_639;
wire   [7:0] shl_ln299_fu_266_p2;
reg   [7:0] shl_ln299_reg_644;
wire   [7:0] select_ln299_2_fu_340_p3;
reg   [7:0] select_ln299_2_reg_649;
reg   [0:0] tmp_4_reg_654;
wire   [7:0] trunc_ln299_8_fu_379_p1;
reg   [7:0] trunc_ln299_8_reg_659;
wire   [0:0] icmp_ln299_5_fu_391_p2;
reg   [0:0] icmp_ln299_5_reg_664;
wire   [0:0] icmp_ln299_6_fu_411_p2;
reg   [0:0] icmp_ln299_6_reg_671;
wire   [0:0] icmp_ln299_7_fu_417_p2;
reg   [0:0] icmp_ln299_7_reg_677;
wire   [7:0] select_ln299_3_fu_443_p3;
reg   [7:0] select_ln299_3_reg_682;
wire   [0:0] icmp_ln299_9_fu_467_p2;
reg   [0:0] icmp_ln299_9_reg_687;
wire   [7:0] shl_ln299_1_fu_477_p2;
reg   [7:0] shl_ln299_1_reg_692;
reg    ap_block_pp0_stage2_11001_grp4;
wire    regslice_both_dout_0_U_apdone_blk;
wire    regslice_both_dout_1_U_apdone_blk;
reg    ap_block_pp0_stage2_01001_grp3;
reg    ap_block_pp0_stage2_11001_grp3;
reg    ap_block_pp0_stage2_01001_grp4;
reg   [31:0] grp_fu_110_p0;
reg   [31:0] grp_fu_110_p1;
wire    ap_block_pp0_stage2_grp0;
wire    ap_block_pp0_stage0_grp0;
reg   [31:0] grp_fu_115_p0;
reg   [31:0] grp_fu_119_p0;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_127_p1;
wire   [31:0] bitcast_ln725_fu_136_p1;
wire   [7:0] tmp_2_fu_152_p3;
wire   [22:0] trunc_ln299_1_fu_164_p1;
wire   [30:0] trunc_ln299_fu_140_p1;
wire   [8:0] zext_ln299_fu_160_p1;
wire  signed [8:0] sub_ln299_fu_186_p2;
wire   [23:0] zext_ln299_1_cast_fu_172_p3;
wire   [31:0] zext_ln299_1_fu_218_p1;
wire  signed [31:0] sext_ln299_fu_192_p1;
wire   [31:0] lshr_ln299_fu_222_p2;
wire   [0:0] icmp_ln299_3_fu_212_p2;
wire   [7:0] trunc_ln299_4_fu_228_p1;
wire   [6:0] trunc_ln299_3_fu_196_p1;
wire   [6:0] sub_ln299_1_fu_240_p2;
wire   [3:0] tmp_3_fu_246_p4;
wire   [7:0] sub_ln299_1cast_fu_262_p1;
wire   [0:0] xor_ln299_fu_278_p2;
wire   [0:0] or_ln299_fu_288_p2;
wire   [0:0] xor_ln299_1_fu_292_p2;
wire   [0:0] and_ln299_fu_283_p2;
wire   [0:0] and_ln299_1_fu_298_p2;
wire   [7:0] tmp_7_fu_312_p8;
wire   [7:0] tmp_7_fu_312_p9;
wire   [2:0] tmp_7_fu_312_p10;
wire   [7:0] tmp_7_fu_312_p11;
wire   [7:0] sub_ln299_2_fu_334_p2;
wire   [31:0] bitcast_ln725_1_fu_347_p1;
wire   [7:0] tmp_5_fu_363_p3;
wire   [22:0] trunc_ln299_7_fu_375_p1;
wire   [30:0] trunc_ln299_6_fu_351_p1;
wire   [8:0] zext_ln299_3_fu_371_p1;
wire  signed [8:0] sub_ln299_3_fu_397_p2;
wire   [23:0] zext_ln299_6_cast_fu_383_p3;
wire   [31:0] zext_ln299_6_fu_429_p1;
wire  signed [31:0] sext_ln299_1_fu_403_p1;
wire   [31:0] lshr_ln299_1_fu_433_p2;
wire   [0:0] icmp_ln299_8_fu_423_p2;
wire   [7:0] trunc_ln299_10_fu_439_p1;
wire   [6:0] trunc_ln299_9_fu_407_p1;
wire   [6:0] sub_ln299_4_fu_451_p2;
wire   [3:0] tmp_6_fu_457_p4;
wire   [7:0] sub_ln299_4cast_fu_473_p1;
wire   [0:0] xor_ln299_2_fu_489_p2;
wire   [0:0] or_ln299_1_fu_499_p2;
wire   [0:0] xor_ln299_3_fu_503_p2;
wire   [0:0] and_ln299_2_fu_494_p2;
wire   [0:0] and_ln299_3_fu_509_p2;
wire   [7:0] tmp_8_fu_523_p8;
wire   [7:0] tmp_8_fu_523_p9;
wire   [2:0] tmp_8_fu_523_p10;
wire   [7:0] tmp_8_fu_523_p11;
wire   [7:0] sub_ln299_5_fu_545_p2;
reg    grp_fu_110_ce;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage0_11001;
reg    grp_fu_115_ce;
reg    grp_fu_119_ce;
reg    grp_fu_122_ce;
reg    grp_fu_127_ce;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_0to26;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to27;
reg    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
reg    ap_block_pp0_stage0_subdone_grp5_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp6_done_reg_iter0;
reg    dout_0_TVALID_int_regslice;
wire    dout_0_TREADY_int_regslice;
wire    regslice_both_dout_0_U_vld_out;
wire   [7:0] dout_1_TDATA_int_regslice;
reg    dout_1_TVALID_int_regslice;
wire    dout_1_TREADY_int_regslice;
wire    regslice_both_dout_1_U_vld_out;
wire  signed [2:0] tmp_7_fu_312_p1;
wire   [2:0] tmp_7_fu_312_p3;
wire   [2:0] tmp_7_fu_312_p5;
wire   [2:0] tmp_7_fu_312_p7;
wire  signed [2:0] tmp_8_fu_523_p1;
wire   [2:0] tmp_8_fu_523_p3;
wire   [2:0] tmp_8_fu_523_p5;
wire   [2:0] tmp_8_fu_523_p7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp3_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp4_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp2_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp5_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp6_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp5_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp6_done_reg_iter0 = 1'b0;
end

CNN_stream_fadd_32ns_32ns_32_10_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_10_full_dsp_1_U763(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_110_p0),
    .din1(grp_fu_110_p1),
    .ce(grp_fu_110_ce),
    .dout(grp_fu_110_p2)
);

CNN_stream_fsub_32ns_32ns_32_10_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_10_full_dsp_1_U764(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_115_p0),
    .din1(fsum_2_reg_601),
    .ce(grp_fu_115_ce),
    .dout(grp_fu_115_p2)
);

CNN_stream_sitofp_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_7_no_dsp_1_U765(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_119_p0),
    .ce(grp_fu_119_ce),
    .dout(grp_fu_119_p1)
);

CNN_stream_flog_32ns_32ns_32_19_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 19 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
flog_32ns_32ns_32_19_full_dsp_1_U766(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(fsum_1_reg_596),
    .ce(grp_fu_122_ce),
    .dout(grp_fu_122_p2)
);

CNN_stream_fexp_32ns_32ns_32_21_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fexp_32ns_32ns_32_21_full_dsp_1_U767(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(grp_fu_127_p1),
    .ce(grp_fu_127_ce),
    .dout(grp_fu_127_p2)
);

(* dissolve_hierarchy = "yes" *) CNN_stream_sparsemux_9_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_9_3_8_1_1_U768(
    .din0(8'd0),
    .din1(trunc_ln299_2_reg_611),
    .din2(select_ln299_reg_634),
    .din3(tmp_7_fu_312_p8),
    .def(tmp_7_fu_312_p9),
    .sel(tmp_7_fu_312_p10),
    .dout(tmp_7_fu_312_p11)
);

(* dissolve_hierarchy = "yes" *) CNN_stream_sparsemux_9_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_9_3_8_1_1_U769(
    .din0(8'd0),
    .din1(trunc_ln299_8_reg_659),
    .din2(select_ln299_3_reg_682),
    .din3(tmp_8_fu_523_p8),
    .def(tmp_8_fu_523_p9),
    .sel(tmp_8_fu_523_p10),
    .dout(tmp_8_fu_523_p11)
);

CNN_stream_regslice_both #(
    .DataWidth( 8 ))
regslice_both_dout_0_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(select_ln299_2_reg_649),
    .vld_in(dout_0_TVALID_int_regslice),
    .ack_in(dout_0_TREADY_int_regslice),
    .data_out(dout_0_TDATA),
    .vld_out(regslice_both_dout_0_U_vld_out),
    .ack_out(dout_0_TREADY),
    .apdone_blk(regslice_both_dout_0_U_apdone_blk)
);

CNN_stream_regslice_both #(
    .DataWidth( 8 ))
regslice_both_dout_1_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(dout_1_TDATA_int_regslice),
    .vld_in(dout_1_TVALID_int_regslice),
    .ack_in(dout_1_TREADY_int_regslice),
    .data_out(dout_1_TDATA),
    .vld_out(regslice_both_dout_1_U_vld_out),
    .ack_out(dout_1_TREADY),
    .apdone_blk(regslice_both_dout_1_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp1)) begin
                ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp2_done_reg_iter0 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp2_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp2)) begin
                ap_block_pp0_stage0_subdone_grp2_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp5_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp5_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp5)) begin
                ap_block_pp0_stage0_subdone_grp5_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp5_done_reg_iter0 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp5_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp5)) begin
                ap_block_pp0_stage0_subdone_grp5_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp6_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp6_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp6)) begin
                ap_block_pp0_stage0_subdone_grp6_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp6_done_reg_iter0 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp6_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp6)) begin
                ap_block_pp0_stage0_subdone_grp6_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp0)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp3_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp3_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp3)) begin
                ap_block_pp0_stage2_subdone_grp3_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp4_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp4_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp4)) begin
                ap_block_pp0_stage2_subdone_grp4_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
            ap_enable_reg_pp0_iter27 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0))) begin
        fc2_embedding_0_read_reg_559 <= fc2_embedding_0_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp2) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg_iter0))) begin
        fc2_embedding_1_read_reg_564 <= fc2_embedding_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        fsum_1_reg_596 <= grp_fu_110_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        fsum_2_reg_601 <= grp_fu_122_p2;
        icmp_ln299_5_reg_664 <= icmp_ln299_5_fu_391_p2;
        icmp_ln299_6_reg_671 <= icmp_ln299_6_fu_411_p2;
        icmp_ln299_7_reg_677 <= icmp_ln299_7_fu_417_p2;
        icmp_ln299_9_reg_687 <= icmp_ln299_9_fu_467_p2;
        select_ln299_2_reg_649 <= select_ln299_2_fu_340_p3;
        select_ln299_3_reg_682 <= select_ln299_3_fu_443_p3;
        shl_ln299_1_reg_692 <= shl_ln299_1_fu_477_p2;
        tmp_4_reg_654 <= bitcast_ln725_1_fu_347_p1[32'd31];
        trunc_ln299_8_reg_659 <= trunc_ln299_8_fu_379_p1;
        vf_reg_569_pp0_iter10_reg <= vf_reg_569_pp0_iter9_reg;
        vf_reg_569_pp0_iter11_reg <= vf_reg_569_pp0_iter10_reg;
        vf_reg_569_pp0_iter12_reg <= vf_reg_569_pp0_iter11_reg;
        vf_reg_569_pp0_iter13_reg <= vf_reg_569_pp0_iter12_reg;
        vf_reg_569_pp0_iter14_reg <= vf_reg_569_pp0_iter13_reg;
        vf_reg_569_pp0_iter15_reg <= vf_reg_569_pp0_iter14_reg;
        vf_reg_569_pp0_iter16_reg <= vf_reg_569_pp0_iter15_reg;
        vf_reg_569_pp0_iter17_reg <= vf_reg_569_pp0_iter16_reg;
        vf_reg_569_pp0_iter18_reg <= vf_reg_569_pp0_iter17_reg;
        vf_reg_569_pp0_iter19_reg <= vf_reg_569_pp0_iter18_reg;
        vf_reg_569_pp0_iter20_reg <= vf_reg_569_pp0_iter19_reg;
        vf_reg_569_pp0_iter21_reg <= vf_reg_569_pp0_iter20_reg;
        vf_reg_569_pp0_iter22_reg <= vf_reg_569_pp0_iter21_reg;
        vf_reg_569_pp0_iter3_reg <= vf_reg_569;
        vf_reg_569_pp0_iter4_reg <= vf_reg_569_pp0_iter3_reg;
        vf_reg_569_pp0_iter5_reg <= vf_reg_569_pp0_iter4_reg;
        vf_reg_569_pp0_iter6_reg <= vf_reg_569_pp0_iter5_reg;
        vf_reg_569_pp0_iter7_reg <= vf_reg_569_pp0_iter6_reg;
        vf_reg_569_pp0_iter8_reg <= vf_reg_569_pp0_iter7_reg;
        vf_reg_569_pp0_iter9_reg <= vf_reg_569_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        fsum_reg_591 <= grp_fu_110_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        icmp_ln299_1_reg_623 <= icmp_ln299_1_fu_200_p2;
        icmp_ln299_2_reg_629 <= icmp_ln299_2_fu_206_p2;
        icmp_ln299_4_reg_639 <= icmp_ln299_4_fu_256_p2;
        icmp_ln299_reg_616 <= icmp_ln299_fu_180_p2;
        select_ln299_reg_634 <= select_ln299_fu_232_p3;
        shl_ln299_reg_644 <= shl_ln299_fu_266_p2;
        tmp_1_reg_606 <= bitcast_ln725_fu_136_p1[32'd31];
        trunc_ln299_2_reg_611 <= trunc_ln299_2_fu_168_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter26 == 1'b1)))) begin
        reg_132 <= grp_fu_115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_reg_581 <= grp_fu_127_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        tmp_s_reg_586 <= grp_fu_127_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        tmp_s_reg_586_pp0_iter10_reg <= tmp_s_reg_586;
        tmp_s_reg_586_pp0_iter11_reg <= tmp_s_reg_586_pp0_iter10_reg;
        tmp_s_reg_586_pp0_iter12_reg <= tmp_s_reg_586_pp0_iter11_reg;
        vf_1_reg_575_pp0_iter10_reg <= vf_1_reg_575_pp0_iter9_reg;
        vf_1_reg_575_pp0_iter11_reg <= vf_1_reg_575_pp0_iter10_reg;
        vf_1_reg_575_pp0_iter12_reg <= vf_1_reg_575_pp0_iter11_reg;
        vf_1_reg_575_pp0_iter13_reg <= vf_1_reg_575_pp0_iter12_reg;
        vf_1_reg_575_pp0_iter14_reg <= vf_1_reg_575_pp0_iter13_reg;
        vf_1_reg_575_pp0_iter15_reg <= vf_1_reg_575_pp0_iter14_reg;
        vf_1_reg_575_pp0_iter16_reg <= vf_1_reg_575_pp0_iter15_reg;
        vf_1_reg_575_pp0_iter17_reg <= vf_1_reg_575_pp0_iter16_reg;
        vf_1_reg_575_pp0_iter18_reg <= vf_1_reg_575_pp0_iter17_reg;
        vf_1_reg_575_pp0_iter19_reg <= vf_1_reg_575_pp0_iter18_reg;
        vf_1_reg_575_pp0_iter20_reg <= vf_1_reg_575_pp0_iter19_reg;
        vf_1_reg_575_pp0_iter21_reg <= vf_1_reg_575_pp0_iter20_reg;
        vf_1_reg_575_pp0_iter22_reg <= vf_1_reg_575_pp0_iter21_reg;
        vf_1_reg_575_pp0_iter3_reg <= vf_1_reg_575;
        vf_1_reg_575_pp0_iter4_reg <= vf_1_reg_575_pp0_iter3_reg;
        vf_1_reg_575_pp0_iter5_reg <= vf_1_reg_575_pp0_iter4_reg;
        vf_1_reg_575_pp0_iter6_reg <= vf_1_reg_575_pp0_iter5_reg;
        vf_1_reg_575_pp0_iter7_reg <= vf_1_reg_575_pp0_iter6_reg;
        vf_1_reg_575_pp0_iter8_reg <= vf_1_reg_575_pp0_iter7_reg;
        vf_1_reg_575_pp0_iter9_reg <= vf_1_reg_575_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        vf_1_reg_575 <= grp_fu_119_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        vf_reg_569 <= grp_fu_119_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0))) begin
        ap_idle_pp0_0to26 = 1'b1;
    end else begin
        ap_idle_pp0_0to26 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0))) begin
        ap_idle_pp0_1to27 = 1'b1;
    end else begin
        ap_idle_pp0_1to27 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to26 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage0_grp5) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp3) & (1'b0 == ap_block_pp0_stage2_subdone_grp3_done_reg) & (ap_enable_reg_pp0_iter26 == 1'b1)))) begin
        dout_0_TDATA_blk_n = dout_0_TREADY_int_regslice;
    end else begin
        dout_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp3) & (1'b0 == ap_block_pp0_stage2_subdone_grp3_done_reg) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        dout_0_TVALID_int_regslice = 1'b1;
    end else begin
        dout_0_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg) & (1'b0 == ap_block_pp0_stage0_grp6) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp4) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter26 == 1'b1)))) begin
        dout_1_TDATA_blk_n = dout_1_TREADY_int_regslice;
    end else begin
        dout_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp4) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        dout_1_TVALID_int_regslice = 1'b1;
    end else begin
        dout_1_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp1))) begin
        fc2_embedding_0_blk_n = fc2_embedding_0_empty_n;
    end else begin
        fc2_embedding_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0))) begin
        fc2_embedding_0_read = 1'b1;
    end else begin
        fc2_embedding_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp2))) begin
        fc2_embedding_1_blk_n = fc2_embedding_1_empty_n;
    end else begin
        fc2_embedding_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp2) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg_iter0))) begin
        fc2_embedding_1_read = 1'b1;
    end else begin
        fc2_embedding_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)))) begin
        grp_fu_110_ce = 1'b1;
    end else begin
        grp_fu_110_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_grp0))) begin
        grp_fu_110_p0 = fsum_reg_591;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp0))) begin
        grp_fu_110_p0 = tmp_reg_581;
    end else begin
        grp_fu_110_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_grp0))) begin
        grp_fu_110_p1 = tmp_s_reg_586_pp0_iter12_reg;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp0))) begin
        grp_fu_110_p1 = 32'd0;
    end else begin
        grp_fu_110_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)))) begin
        grp_fu_115_ce = 1'b1;
    end else begin
        grp_fu_115_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_grp0))) begin
        grp_fu_115_p0 = vf_1_reg_575_pp0_iter22_reg;
    end else if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp0))) begin
        grp_fu_115_p0 = vf_reg_569_pp0_iter22_reg;
    end else begin
        grp_fu_115_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)))) begin
        grp_fu_119_ce = 1'b1;
    end else begin
        grp_fu_119_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0_reg == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp0))) begin
            grp_fu_119_p0 = fc2_embedding_1_read_reg_564;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_119_p0 = fc2_embedding_0_read_reg_559;
        end else begin
            grp_fu_119_p0 = 'bx;
        end
    end else begin
        grp_fu_119_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)))) begin
        grp_fu_122_ce = 1'b1;
    end else begin
        grp_fu_122_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)))) begin
        grp_fu_127_ce = 1'b1;
    end else begin
        grp_fu_127_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_grp0))) begin
        grp_fu_127_p1 = vf_1_reg_575;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp0))) begin
        grp_fu_127_p1 = vf_reg_569;
    end else begin
        grp_fu_127_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to27 == 1'b1)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln299_1_fu_298_p2 = (xor_ln299_1_fu_292_p2 & icmp_ln299_2_reg_629);

assign and_ln299_2_fu_494_p2 = (xor_ln299_2_fu_489_p2 & icmp_ln299_6_reg_671);

assign and_ln299_3_fu_509_p2 = (xor_ln299_3_fu_503_p2 & icmp_ln299_7_reg_677);

assign and_ln299_fu_283_p2 = (xor_ln299_fu_278_p2 & icmp_ln299_1_reg_623);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter27 == 1'b1) & ((regslice_both_dout_1_U_apdone_blk == 1'b1) | (regslice_both_dout_0_U_apdone_blk == 1'b1) | ((dout_1_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg)) | ((dout_0_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((ap_done_reg == 1'b1) | ((1'b1 == ap_block_state1_pp0_stage0_iter0_grp2) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg_iter0)) | ((1'b1 == ap_block_state1_pp0_stage0_iter0_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp2 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp2) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg_iter0));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter27 == 1'b1) & ((regslice_both_dout_1_U_apdone_blk == 1'b1) | (regslice_both_dout_0_U_apdone_blk == 1'b1) | ((dout_1_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg)) | ((dout_0_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((ap_done_reg == 1'b1) | ((1'b1 == ap_block_state1_pp0_stage0_iter0_grp2) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg_iter0)) | ((1'b1 == ap_block_state1_pp0_stage0_iter0_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp1 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp2 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp2) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp5 = (((dout_0_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp6 = (((dout_1_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg_iter0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage2_01001_grp3 = ((dout_0_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp3_done_reg) & (ap_enable_reg_pp0_iter26 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_01001_grp4 = ((dout_1_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter26 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter26 == 1'b1) & (((dout_1_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg)) | ((dout_0_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp3_done_reg))));
end

assign ap_block_pp0_stage2_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001_grp3 = ((dout_0_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp3_done_reg) & (ap_enable_reg_pp0_iter26 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_grp4 = ((dout_1_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter26 == 1'b1));
end

assign ap_block_pp0_stage2_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter26 == 1'b1) & (((dout_1_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg)) | ((dout_0_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp3_done_reg))));
end

assign ap_block_pp0_stage2_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp3 = ((dout_0_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp3_done_reg) & (ap_enable_reg_pp0_iter26 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp4 = ((dout_1_TREADY_int_regslice == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter26 == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp1 = ((ap_done_reg == 1'b1) | (fc2_embedding_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp2 = ((ap_done_reg == 1'b1) | (fc2_embedding_1_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln725_1_fu_347_p1 = reg_132;

assign bitcast_ln725_fu_136_p1 = reg_132;

assign dout_0_TVALID = regslice_both_dout_0_U_vld_out;

assign dout_1_TDATA_int_regslice = ((tmp_4_reg_654[0:0] == 1'b1) ? sub_ln299_5_fu_545_p2 : tmp_8_fu_523_p11);

assign dout_1_TVALID = regslice_both_dout_1_U_vld_out;

assign icmp_ln299_1_fu_200_p2 = ((tmp_2_fu_152_p3 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln299_2_fu_206_p2 = (($signed(sub_ln299_fu_186_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln299_3_fu_212_p2 = (($signed(sub_ln299_fu_186_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln299_4_fu_256_p2 = ((tmp_3_fu_246_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln299_5_fu_391_p2 = ((trunc_ln299_6_fu_351_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln299_6_fu_411_p2 = ((tmp_5_fu_363_p3 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln299_7_fu_417_p2 = (($signed(sub_ln299_3_fu_397_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln299_8_fu_423_p2 = (($signed(sub_ln299_3_fu_397_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln299_9_fu_467_p2 = ((tmp_6_fu_457_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln299_fu_180_p2 = ((trunc_ln299_fu_140_p1 == 31'd0) ? 1'b1 : 1'b0);

assign lshr_ln299_1_fu_433_p2 = zext_ln299_6_fu_429_p1 >> sext_ln299_1_fu_403_p1;

assign lshr_ln299_fu_222_p2 = zext_ln299_1_fu_218_p1 >> sext_ln299_fu_192_p1;

assign or_ln299_1_fu_499_p2 = (icmp_ln299_6_reg_671 | icmp_ln299_5_reg_664);

assign or_ln299_fu_288_p2 = (icmp_ln299_reg_616 | icmp_ln299_1_reg_623);

assign select_ln299_2_fu_340_p3 = ((tmp_1_reg_606[0:0] == 1'b1) ? sub_ln299_2_fu_334_p2 : tmp_7_fu_312_p11);

assign select_ln299_3_fu_443_p3 = ((icmp_ln299_8_fu_423_p2[0:0] == 1'b1) ? trunc_ln299_10_fu_439_p1 : 8'd0);

assign select_ln299_fu_232_p3 = ((icmp_ln299_3_fu_212_p2[0:0] == 1'b1) ? trunc_ln299_4_fu_228_p1 : 8'd0);

assign sext_ln299_1_fu_403_p1 = sub_ln299_3_fu_397_p2;

assign sext_ln299_fu_192_p1 = sub_ln299_fu_186_p2;

assign shl_ln299_1_fu_477_p2 = trunc_ln299_8_fu_379_p1 << sub_ln299_4cast_fu_473_p1;

assign shl_ln299_fu_266_p2 = trunc_ln299_2_fu_168_p1 << sub_ln299_1cast_fu_262_p1;

assign sub_ln299_1_fu_240_p2 = (7'd0 - trunc_ln299_3_fu_196_p1);

assign sub_ln299_1cast_fu_262_p1 = sub_ln299_1_fu_240_p2;

assign sub_ln299_2_fu_334_p2 = (8'd0 - tmp_7_fu_312_p11);

assign sub_ln299_3_fu_397_p2 = (9'd150 - zext_ln299_3_fu_371_p1);

assign sub_ln299_4_fu_451_p2 = (7'd0 - trunc_ln299_9_fu_407_p1);

assign sub_ln299_4cast_fu_473_p1 = sub_ln299_4_fu_451_p2;

assign sub_ln299_5_fu_545_p2 = (8'd0 - tmp_8_fu_523_p11);

assign sub_ln299_fu_186_p2 = (9'd150 - zext_ln299_fu_160_p1);

assign tmp_2_fu_152_p3 = {{bitcast_ln725_fu_136_p1[30:23]}};

assign tmp_3_fu_246_p4 = {{sub_ln299_1_fu_240_p2[6:3]}};

assign tmp_5_fu_363_p3 = {{bitcast_ln725_1_fu_347_p1[30:23]}};

assign tmp_6_fu_457_p4 = {{sub_ln299_4_fu_451_p2[6:3]}};

assign tmp_7_fu_312_p10 = {{{icmp_ln299_reg_616}, {and_ln299_fu_283_p2}}, {and_ln299_1_fu_298_p2}};

assign tmp_7_fu_312_p8 = ((icmp_ln299_4_reg_639[0:0] == 1'b1) ? shl_ln299_reg_644 : 8'd0);

assign tmp_7_fu_312_p9 = 'bx;

assign tmp_8_fu_523_p10 = {{{icmp_ln299_5_reg_664}, {and_ln299_2_fu_494_p2}}, {and_ln299_3_fu_509_p2}};

assign tmp_8_fu_523_p8 = ((icmp_ln299_9_reg_687[0:0] == 1'b1) ? shl_ln299_1_reg_692 : 8'd0);

assign tmp_8_fu_523_p9 = 'bx;

assign trunc_ln299_10_fu_439_p1 = lshr_ln299_1_fu_433_p2[7:0];

assign trunc_ln299_1_fu_164_p1 = bitcast_ln725_fu_136_p1[22:0];

assign trunc_ln299_2_fu_168_p1 = bitcast_ln725_fu_136_p1[7:0];

assign trunc_ln299_3_fu_196_p1 = sub_ln299_fu_186_p2[6:0];

assign trunc_ln299_4_fu_228_p1 = lshr_ln299_fu_222_p2[7:0];

assign trunc_ln299_6_fu_351_p1 = bitcast_ln725_1_fu_347_p1[30:0];

assign trunc_ln299_7_fu_375_p1 = bitcast_ln725_1_fu_347_p1[22:0];

assign trunc_ln299_8_fu_379_p1 = bitcast_ln725_1_fu_347_p1[7:0];

assign trunc_ln299_9_fu_407_p1 = sub_ln299_3_fu_397_p2[6:0];

assign trunc_ln299_fu_140_p1 = bitcast_ln725_fu_136_p1[30:0];

assign xor_ln299_1_fu_292_p2 = (or_ln299_fu_288_p2 ^ 1'd1);

assign xor_ln299_2_fu_489_p2 = (icmp_ln299_5_reg_664 ^ 1'd1);

assign xor_ln299_3_fu_503_p2 = (or_ln299_1_fu_499_p2 ^ 1'd1);

assign xor_ln299_fu_278_p2 = (icmp_ln299_reg_616 ^ 1'd1);

assign zext_ln299_1_cast_fu_172_p3 = {{1'd1}, {trunc_ln299_1_fu_164_p1}};

assign zext_ln299_1_fu_218_p1 = zext_ln299_1_cast_fu_172_p3;

assign zext_ln299_3_fu_371_p1 = tmp_5_fu_363_p3;

assign zext_ln299_6_cast_fu_383_p3 = {{1'd1}, {trunc_ln299_7_fu_375_p1}};

assign zext_ln299_6_fu_429_p1 = zext_ln299_6_cast_fu_383_p3;

assign zext_ln299_fu_160_p1 = tmp_2_fu_152_p3;

endmodule //CNN_stream_l_softmax_layer_stream
