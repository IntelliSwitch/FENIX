// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_stream_conv2d_3_stream_layer_post_9u_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        sum_out3_0_0_dout,
        sum_out3_0_0_empty_n,
        sum_out3_0_0_read,
        sum_out3_0_0_num_data_valid,
        sum_out3_0_0_fifo_cap,
        sum_out3_0_1_dout,
        sum_out3_0_1_empty_n,
        sum_out3_0_1_read,
        sum_out3_0_1_num_data_valid,
        sum_out3_0_1_fifo_cap,
        sum_out3_0_2_dout,
        sum_out3_0_2_empty_n,
        sum_out3_0_2_read,
        sum_out3_0_2_num_data_valid,
        sum_out3_0_2_fifo_cap,
        sum_out3_0_3_dout,
        sum_out3_0_3_empty_n,
        sum_out3_0_3_read,
        sum_out3_0_3_num_data_valid,
        sum_out3_0_3_fifo_cap,
        sum_out3_0_4_dout,
        sum_out3_0_4_empty_n,
        sum_out3_0_4_read,
        sum_out3_0_4_num_data_valid,
        sum_out3_0_4_fifo_cap,
        sum_out3_0_5_dout,
        sum_out3_0_5_empty_n,
        sum_out3_0_5_read,
        sum_out3_0_5_num_data_valid,
        sum_out3_0_5_fifo_cap,
        sum_out3_1_0_dout,
        sum_out3_1_0_empty_n,
        sum_out3_1_0_read,
        sum_out3_1_0_num_data_valid,
        sum_out3_1_0_fifo_cap,
        sum_out3_1_1_dout,
        sum_out3_1_1_empty_n,
        sum_out3_1_1_read,
        sum_out3_1_1_num_data_valid,
        sum_out3_1_1_fifo_cap,
        sum_out3_1_2_dout,
        sum_out3_1_2_empty_n,
        sum_out3_1_2_read,
        sum_out3_1_2_num_data_valid,
        sum_out3_1_2_fifo_cap,
        sum_out3_1_3_dout,
        sum_out3_1_3_empty_n,
        sum_out3_1_3_read,
        sum_out3_1_3_num_data_valid,
        sum_out3_1_3_fifo_cap,
        sum_out3_1_4_dout,
        sum_out3_1_4_empty_n,
        sum_out3_1_4_read,
        sum_out3_1_4_num_data_valid,
        sum_out3_1_4_fifo_cap,
        sum_out3_1_5_dout,
        sum_out3_1_5_empty_n,
        sum_out3_1_5_read,
        sum_out3_1_5_num_data_valid,
        sum_out3_1_5_fifo_cap,
        sum_out3_2_0_dout,
        sum_out3_2_0_empty_n,
        sum_out3_2_0_read,
        sum_out3_2_0_num_data_valid,
        sum_out3_2_0_fifo_cap,
        sum_out3_2_1_dout,
        sum_out3_2_1_empty_n,
        sum_out3_2_1_read,
        sum_out3_2_1_num_data_valid,
        sum_out3_2_1_fifo_cap,
        sum_out3_2_2_dout,
        sum_out3_2_2_empty_n,
        sum_out3_2_2_read,
        sum_out3_2_2_num_data_valid,
        sum_out3_2_2_fifo_cap,
        sum_out3_2_3_dout,
        sum_out3_2_3_empty_n,
        sum_out3_2_3_read,
        sum_out3_2_3_num_data_valid,
        sum_out3_2_3_fifo_cap,
        sum_out3_2_4_dout,
        sum_out3_2_4_empty_n,
        sum_out3_2_4_read,
        sum_out3_2_4_num_data_valid,
        sum_out3_2_4_fifo_cap,
        sum_out3_2_5_dout,
        sum_out3_2_5_empty_n,
        sum_out3_2_5_read,
        sum_out3_2_5_num_data_valid,
        sum_out3_2_5_fifo_cap,
        sum_out3_3_0_dout,
        sum_out3_3_0_empty_n,
        sum_out3_3_0_read,
        sum_out3_3_0_num_data_valid,
        sum_out3_3_0_fifo_cap,
        sum_out3_3_1_dout,
        sum_out3_3_1_empty_n,
        sum_out3_3_1_read,
        sum_out3_3_1_num_data_valid,
        sum_out3_3_1_fifo_cap,
        sum_out3_3_2_dout,
        sum_out3_3_2_empty_n,
        sum_out3_3_2_read,
        sum_out3_3_2_num_data_valid,
        sum_out3_3_2_fifo_cap,
        sum_out3_3_3_dout,
        sum_out3_3_3_empty_n,
        sum_out3_3_3_read,
        sum_out3_3_3_num_data_valid,
        sum_out3_3_3_fifo_cap,
        sum_out3_3_4_dout,
        sum_out3_3_4_empty_n,
        sum_out3_3_4_read,
        sum_out3_3_4_num_data_valid,
        sum_out3_3_4_fifo_cap,
        sum_out3_3_5_dout,
        sum_out3_3_5_empty_n,
        sum_out3_3_5_read,
        sum_out3_3_5_num_data_valid,
        sum_out3_3_5_fifo_cap,
        sum_out3_4_0_dout,
        sum_out3_4_0_empty_n,
        sum_out3_4_0_read,
        sum_out3_4_0_num_data_valid,
        sum_out3_4_0_fifo_cap,
        sum_out3_4_1_dout,
        sum_out3_4_1_empty_n,
        sum_out3_4_1_read,
        sum_out3_4_1_num_data_valid,
        sum_out3_4_1_fifo_cap,
        sum_out3_4_2_dout,
        sum_out3_4_2_empty_n,
        sum_out3_4_2_read,
        sum_out3_4_2_num_data_valid,
        sum_out3_4_2_fifo_cap,
        sum_out3_4_3_dout,
        sum_out3_4_3_empty_n,
        sum_out3_4_3_read,
        sum_out3_4_3_num_data_valid,
        sum_out3_4_3_fifo_cap,
        sum_out3_4_4_dout,
        sum_out3_4_4_empty_n,
        sum_out3_4_4_read,
        sum_out3_4_4_num_data_valid,
        sum_out3_4_4_fifo_cap,
        sum_out3_4_5_dout,
        sum_out3_4_5_empty_n,
        sum_out3_4_5_read,
        sum_out3_4_5_num_data_valid,
        sum_out3_4_5_fifo_cap,
        sum_out3_5_0_dout,
        sum_out3_5_0_empty_n,
        sum_out3_5_0_read,
        sum_out3_5_0_num_data_valid,
        sum_out3_5_0_fifo_cap,
        sum_out3_5_1_dout,
        sum_out3_5_1_empty_n,
        sum_out3_5_1_read,
        sum_out3_5_1_num_data_valid,
        sum_out3_5_1_fifo_cap,
        sum_out3_5_2_dout,
        sum_out3_5_2_empty_n,
        sum_out3_5_2_read,
        sum_out3_5_2_num_data_valid,
        sum_out3_5_2_fifo_cap,
        sum_out3_5_3_dout,
        sum_out3_5_3_empty_n,
        sum_out3_5_3_read,
        sum_out3_5_3_num_data_valid,
        sum_out3_5_3_fifo_cap,
        sum_out3_5_4_dout,
        sum_out3_5_4_empty_n,
        sum_out3_5_4_read,
        sum_out3_5_4_num_data_valid,
        sum_out3_5_4_fifo_cap,
        sum_out3_5_5_dout,
        sum_out3_5_5_empty_n,
        sum_out3_5_5_read,
        sum_out3_5_5_num_data_valid,
        sum_out3_5_5_fifo_cap,
        sum_out3_6_0_dout,
        sum_out3_6_0_empty_n,
        sum_out3_6_0_read,
        sum_out3_6_0_num_data_valid,
        sum_out3_6_0_fifo_cap,
        sum_out3_6_1_dout,
        sum_out3_6_1_empty_n,
        sum_out3_6_1_read,
        sum_out3_6_1_num_data_valid,
        sum_out3_6_1_fifo_cap,
        sum_out3_6_2_dout,
        sum_out3_6_2_empty_n,
        sum_out3_6_2_read,
        sum_out3_6_2_num_data_valid,
        sum_out3_6_2_fifo_cap,
        sum_out3_6_3_dout,
        sum_out3_6_3_empty_n,
        sum_out3_6_3_read,
        sum_out3_6_3_num_data_valid,
        sum_out3_6_3_fifo_cap,
        sum_out3_6_4_dout,
        sum_out3_6_4_empty_n,
        sum_out3_6_4_read,
        sum_out3_6_4_num_data_valid,
        sum_out3_6_4_fifo_cap,
        sum_out3_6_5_dout,
        sum_out3_6_5_empty_n,
        sum_out3_6_5_read,
        sum_out3_6_5_num_data_valid,
        sum_out3_6_5_fifo_cap,
        sum_out3_7_0_dout,
        sum_out3_7_0_empty_n,
        sum_out3_7_0_read,
        sum_out3_7_0_num_data_valid,
        sum_out3_7_0_fifo_cap,
        sum_out3_7_1_dout,
        sum_out3_7_1_empty_n,
        sum_out3_7_1_read,
        sum_out3_7_1_num_data_valid,
        sum_out3_7_1_fifo_cap,
        sum_out3_7_2_dout,
        sum_out3_7_2_empty_n,
        sum_out3_7_2_read,
        sum_out3_7_2_num_data_valid,
        sum_out3_7_2_fifo_cap,
        sum_out3_7_3_dout,
        sum_out3_7_3_empty_n,
        sum_out3_7_3_read,
        sum_out3_7_3_num_data_valid,
        sum_out3_7_3_fifo_cap,
        sum_out3_7_4_dout,
        sum_out3_7_4_empty_n,
        sum_out3_7_4_read,
        sum_out3_7_4_num_data_valid,
        sum_out3_7_4_fifo_cap,
        sum_out3_7_5_dout,
        sum_out3_7_5_empty_n,
        sum_out3_7_5_read,
        sum_out3_7_5_num_data_valid,
        sum_out3_7_5_fifo_cap,
        sum_out3_8_0_dout,
        sum_out3_8_0_empty_n,
        sum_out3_8_0_read,
        sum_out3_8_0_num_data_valid,
        sum_out3_8_0_fifo_cap,
        sum_out3_8_1_dout,
        sum_out3_8_1_empty_n,
        sum_out3_8_1_read,
        sum_out3_8_1_num_data_valid,
        sum_out3_8_1_fifo_cap,
        sum_out3_8_2_dout,
        sum_out3_8_2_empty_n,
        sum_out3_8_2_read,
        sum_out3_8_2_num_data_valid,
        sum_out3_8_2_fifo_cap,
        sum_out3_8_3_dout,
        sum_out3_8_3_empty_n,
        sum_out3_8_3_read,
        sum_out3_8_3_num_data_valid,
        sum_out3_8_3_fifo_cap,
        sum_out3_8_4_dout,
        sum_out3_8_4_empty_n,
        sum_out3_8_4_read,
        sum_out3_8_4_num_data_valid,
        sum_out3_8_4_fifo_cap,
        sum_out3_8_5_dout,
        sum_out3_8_5_empty_n,
        sum_out3_8_5_read,
        sum_out3_8_5_num_data_valid,
        sum_out3_8_5_fifo_cap,
        conv_out3_0_0_din,
        conv_out3_0_0_full_n,
        conv_out3_0_0_write,
        conv_out3_0_0_num_data_valid,
        conv_out3_0_0_fifo_cap,
        conv_out3_0_1_din,
        conv_out3_0_1_full_n,
        conv_out3_0_1_write,
        conv_out3_0_1_num_data_valid,
        conv_out3_0_1_fifo_cap,
        conv_out3_0_2_din,
        conv_out3_0_2_full_n,
        conv_out3_0_2_write,
        conv_out3_0_2_num_data_valid,
        conv_out3_0_2_fifo_cap,
        conv_out3_0_3_din,
        conv_out3_0_3_full_n,
        conv_out3_0_3_write,
        conv_out3_0_3_num_data_valid,
        conv_out3_0_3_fifo_cap,
        conv_out3_0_4_din,
        conv_out3_0_4_full_n,
        conv_out3_0_4_write,
        conv_out3_0_4_num_data_valid,
        conv_out3_0_4_fifo_cap,
        conv_out3_0_5_din,
        conv_out3_0_5_full_n,
        conv_out3_0_5_write,
        conv_out3_0_5_num_data_valid,
        conv_out3_0_5_fifo_cap,
        conv_out3_0_6_din,
        conv_out3_0_6_full_n,
        conv_out3_0_6_write,
        conv_out3_0_6_num_data_valid,
        conv_out3_0_6_fifo_cap,
        conv_out3_1_0_din,
        conv_out3_1_0_full_n,
        conv_out3_1_0_write,
        conv_out3_1_0_num_data_valid,
        conv_out3_1_0_fifo_cap,
        conv_out3_1_1_din,
        conv_out3_1_1_full_n,
        conv_out3_1_1_write,
        conv_out3_1_1_num_data_valid,
        conv_out3_1_1_fifo_cap,
        conv_out3_1_2_din,
        conv_out3_1_2_full_n,
        conv_out3_1_2_write,
        conv_out3_1_2_num_data_valid,
        conv_out3_1_2_fifo_cap,
        conv_out3_1_3_din,
        conv_out3_1_3_full_n,
        conv_out3_1_3_write,
        conv_out3_1_3_num_data_valid,
        conv_out3_1_3_fifo_cap,
        conv_out3_1_4_din,
        conv_out3_1_4_full_n,
        conv_out3_1_4_write,
        conv_out3_1_4_num_data_valid,
        conv_out3_1_4_fifo_cap,
        conv_out3_1_5_din,
        conv_out3_1_5_full_n,
        conv_out3_1_5_write,
        conv_out3_1_5_num_data_valid,
        conv_out3_1_5_fifo_cap,
        conv_out3_1_6_din,
        conv_out3_1_6_full_n,
        conv_out3_1_6_write,
        conv_out3_1_6_num_data_valid,
        conv_out3_1_6_fifo_cap,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] sum_out3_0_0_dout;
input   sum_out3_0_0_empty_n;
output   sum_out3_0_0_read;
input  [2:0] sum_out3_0_0_num_data_valid;
input  [2:0] sum_out3_0_0_fifo_cap;
input  [31:0] sum_out3_0_1_dout;
input   sum_out3_0_1_empty_n;
output   sum_out3_0_1_read;
input  [2:0] sum_out3_0_1_num_data_valid;
input  [2:0] sum_out3_0_1_fifo_cap;
input  [31:0] sum_out3_0_2_dout;
input   sum_out3_0_2_empty_n;
output   sum_out3_0_2_read;
input  [2:0] sum_out3_0_2_num_data_valid;
input  [2:0] sum_out3_0_2_fifo_cap;
input  [31:0] sum_out3_0_3_dout;
input   sum_out3_0_3_empty_n;
output   sum_out3_0_3_read;
input  [2:0] sum_out3_0_3_num_data_valid;
input  [2:0] sum_out3_0_3_fifo_cap;
input  [31:0] sum_out3_0_4_dout;
input   sum_out3_0_4_empty_n;
output   sum_out3_0_4_read;
input  [2:0] sum_out3_0_4_num_data_valid;
input  [2:0] sum_out3_0_4_fifo_cap;
input  [31:0] sum_out3_0_5_dout;
input   sum_out3_0_5_empty_n;
output   sum_out3_0_5_read;
input  [2:0] sum_out3_0_5_num_data_valid;
input  [2:0] sum_out3_0_5_fifo_cap;
input  [31:0] sum_out3_1_0_dout;
input   sum_out3_1_0_empty_n;
output   sum_out3_1_0_read;
input  [2:0] sum_out3_1_0_num_data_valid;
input  [2:0] sum_out3_1_0_fifo_cap;
input  [31:0] sum_out3_1_1_dout;
input   sum_out3_1_1_empty_n;
output   sum_out3_1_1_read;
input  [2:0] sum_out3_1_1_num_data_valid;
input  [2:0] sum_out3_1_1_fifo_cap;
input  [31:0] sum_out3_1_2_dout;
input   sum_out3_1_2_empty_n;
output   sum_out3_1_2_read;
input  [2:0] sum_out3_1_2_num_data_valid;
input  [2:0] sum_out3_1_2_fifo_cap;
input  [31:0] sum_out3_1_3_dout;
input   sum_out3_1_3_empty_n;
output   sum_out3_1_3_read;
input  [2:0] sum_out3_1_3_num_data_valid;
input  [2:0] sum_out3_1_3_fifo_cap;
input  [31:0] sum_out3_1_4_dout;
input   sum_out3_1_4_empty_n;
output   sum_out3_1_4_read;
input  [2:0] sum_out3_1_4_num_data_valid;
input  [2:0] sum_out3_1_4_fifo_cap;
input  [31:0] sum_out3_1_5_dout;
input   sum_out3_1_5_empty_n;
output   sum_out3_1_5_read;
input  [2:0] sum_out3_1_5_num_data_valid;
input  [2:0] sum_out3_1_5_fifo_cap;
input  [31:0] sum_out3_2_0_dout;
input   sum_out3_2_0_empty_n;
output   sum_out3_2_0_read;
input  [2:0] sum_out3_2_0_num_data_valid;
input  [2:0] sum_out3_2_0_fifo_cap;
input  [31:0] sum_out3_2_1_dout;
input   sum_out3_2_1_empty_n;
output   sum_out3_2_1_read;
input  [2:0] sum_out3_2_1_num_data_valid;
input  [2:0] sum_out3_2_1_fifo_cap;
input  [31:0] sum_out3_2_2_dout;
input   sum_out3_2_2_empty_n;
output   sum_out3_2_2_read;
input  [2:0] sum_out3_2_2_num_data_valid;
input  [2:0] sum_out3_2_2_fifo_cap;
input  [31:0] sum_out3_2_3_dout;
input   sum_out3_2_3_empty_n;
output   sum_out3_2_3_read;
input  [2:0] sum_out3_2_3_num_data_valid;
input  [2:0] sum_out3_2_3_fifo_cap;
input  [31:0] sum_out3_2_4_dout;
input   sum_out3_2_4_empty_n;
output   sum_out3_2_4_read;
input  [2:0] sum_out3_2_4_num_data_valid;
input  [2:0] sum_out3_2_4_fifo_cap;
input  [31:0] sum_out3_2_5_dout;
input   sum_out3_2_5_empty_n;
output   sum_out3_2_5_read;
input  [2:0] sum_out3_2_5_num_data_valid;
input  [2:0] sum_out3_2_5_fifo_cap;
input  [31:0] sum_out3_3_0_dout;
input   sum_out3_3_0_empty_n;
output   sum_out3_3_0_read;
input  [2:0] sum_out3_3_0_num_data_valid;
input  [2:0] sum_out3_3_0_fifo_cap;
input  [31:0] sum_out3_3_1_dout;
input   sum_out3_3_1_empty_n;
output   sum_out3_3_1_read;
input  [2:0] sum_out3_3_1_num_data_valid;
input  [2:0] sum_out3_3_1_fifo_cap;
input  [31:0] sum_out3_3_2_dout;
input   sum_out3_3_2_empty_n;
output   sum_out3_3_2_read;
input  [2:0] sum_out3_3_2_num_data_valid;
input  [2:0] sum_out3_3_2_fifo_cap;
input  [31:0] sum_out3_3_3_dout;
input   sum_out3_3_3_empty_n;
output   sum_out3_3_3_read;
input  [2:0] sum_out3_3_3_num_data_valid;
input  [2:0] sum_out3_3_3_fifo_cap;
input  [31:0] sum_out3_3_4_dout;
input   sum_out3_3_4_empty_n;
output   sum_out3_3_4_read;
input  [2:0] sum_out3_3_4_num_data_valid;
input  [2:0] sum_out3_3_4_fifo_cap;
input  [31:0] sum_out3_3_5_dout;
input   sum_out3_3_5_empty_n;
output   sum_out3_3_5_read;
input  [2:0] sum_out3_3_5_num_data_valid;
input  [2:0] sum_out3_3_5_fifo_cap;
input  [31:0] sum_out3_4_0_dout;
input   sum_out3_4_0_empty_n;
output   sum_out3_4_0_read;
input  [2:0] sum_out3_4_0_num_data_valid;
input  [2:0] sum_out3_4_0_fifo_cap;
input  [31:0] sum_out3_4_1_dout;
input   sum_out3_4_1_empty_n;
output   sum_out3_4_1_read;
input  [2:0] sum_out3_4_1_num_data_valid;
input  [2:0] sum_out3_4_1_fifo_cap;
input  [31:0] sum_out3_4_2_dout;
input   sum_out3_4_2_empty_n;
output   sum_out3_4_2_read;
input  [2:0] sum_out3_4_2_num_data_valid;
input  [2:0] sum_out3_4_2_fifo_cap;
input  [31:0] sum_out3_4_3_dout;
input   sum_out3_4_3_empty_n;
output   sum_out3_4_3_read;
input  [2:0] sum_out3_4_3_num_data_valid;
input  [2:0] sum_out3_4_3_fifo_cap;
input  [31:0] sum_out3_4_4_dout;
input   sum_out3_4_4_empty_n;
output   sum_out3_4_4_read;
input  [2:0] sum_out3_4_4_num_data_valid;
input  [2:0] sum_out3_4_4_fifo_cap;
input  [31:0] sum_out3_4_5_dout;
input   sum_out3_4_5_empty_n;
output   sum_out3_4_5_read;
input  [2:0] sum_out3_4_5_num_data_valid;
input  [2:0] sum_out3_4_5_fifo_cap;
input  [31:0] sum_out3_5_0_dout;
input   sum_out3_5_0_empty_n;
output   sum_out3_5_0_read;
input  [2:0] sum_out3_5_0_num_data_valid;
input  [2:0] sum_out3_5_0_fifo_cap;
input  [31:0] sum_out3_5_1_dout;
input   sum_out3_5_1_empty_n;
output   sum_out3_5_1_read;
input  [2:0] sum_out3_5_1_num_data_valid;
input  [2:0] sum_out3_5_1_fifo_cap;
input  [31:0] sum_out3_5_2_dout;
input   sum_out3_5_2_empty_n;
output   sum_out3_5_2_read;
input  [2:0] sum_out3_5_2_num_data_valid;
input  [2:0] sum_out3_5_2_fifo_cap;
input  [31:0] sum_out3_5_3_dout;
input   sum_out3_5_3_empty_n;
output   sum_out3_5_3_read;
input  [2:0] sum_out3_5_3_num_data_valid;
input  [2:0] sum_out3_5_3_fifo_cap;
input  [31:0] sum_out3_5_4_dout;
input   sum_out3_5_4_empty_n;
output   sum_out3_5_4_read;
input  [2:0] sum_out3_5_4_num_data_valid;
input  [2:0] sum_out3_5_4_fifo_cap;
input  [31:0] sum_out3_5_5_dout;
input   sum_out3_5_5_empty_n;
output   sum_out3_5_5_read;
input  [2:0] sum_out3_5_5_num_data_valid;
input  [2:0] sum_out3_5_5_fifo_cap;
input  [31:0] sum_out3_6_0_dout;
input   sum_out3_6_0_empty_n;
output   sum_out3_6_0_read;
input  [2:0] sum_out3_6_0_num_data_valid;
input  [2:0] sum_out3_6_0_fifo_cap;
input  [31:0] sum_out3_6_1_dout;
input   sum_out3_6_1_empty_n;
output   sum_out3_6_1_read;
input  [2:0] sum_out3_6_1_num_data_valid;
input  [2:0] sum_out3_6_1_fifo_cap;
input  [31:0] sum_out3_6_2_dout;
input   sum_out3_6_2_empty_n;
output   sum_out3_6_2_read;
input  [2:0] sum_out3_6_2_num_data_valid;
input  [2:0] sum_out3_6_2_fifo_cap;
input  [31:0] sum_out3_6_3_dout;
input   sum_out3_6_3_empty_n;
output   sum_out3_6_3_read;
input  [2:0] sum_out3_6_3_num_data_valid;
input  [2:0] sum_out3_6_3_fifo_cap;
input  [31:0] sum_out3_6_4_dout;
input   sum_out3_6_4_empty_n;
output   sum_out3_6_4_read;
input  [2:0] sum_out3_6_4_num_data_valid;
input  [2:0] sum_out3_6_4_fifo_cap;
input  [31:0] sum_out3_6_5_dout;
input   sum_out3_6_5_empty_n;
output   sum_out3_6_5_read;
input  [2:0] sum_out3_6_5_num_data_valid;
input  [2:0] sum_out3_6_5_fifo_cap;
input  [31:0] sum_out3_7_0_dout;
input   sum_out3_7_0_empty_n;
output   sum_out3_7_0_read;
input  [2:0] sum_out3_7_0_num_data_valid;
input  [2:0] sum_out3_7_0_fifo_cap;
input  [31:0] sum_out3_7_1_dout;
input   sum_out3_7_1_empty_n;
output   sum_out3_7_1_read;
input  [2:0] sum_out3_7_1_num_data_valid;
input  [2:0] sum_out3_7_1_fifo_cap;
input  [31:0] sum_out3_7_2_dout;
input   sum_out3_7_2_empty_n;
output   sum_out3_7_2_read;
input  [2:0] sum_out3_7_2_num_data_valid;
input  [2:0] sum_out3_7_2_fifo_cap;
input  [31:0] sum_out3_7_3_dout;
input   sum_out3_7_3_empty_n;
output   sum_out3_7_3_read;
input  [2:0] sum_out3_7_3_num_data_valid;
input  [2:0] sum_out3_7_3_fifo_cap;
input  [31:0] sum_out3_7_4_dout;
input   sum_out3_7_4_empty_n;
output   sum_out3_7_4_read;
input  [2:0] sum_out3_7_4_num_data_valid;
input  [2:0] sum_out3_7_4_fifo_cap;
input  [31:0] sum_out3_7_5_dout;
input   sum_out3_7_5_empty_n;
output   sum_out3_7_5_read;
input  [2:0] sum_out3_7_5_num_data_valid;
input  [2:0] sum_out3_7_5_fifo_cap;
input  [31:0] sum_out3_8_0_dout;
input   sum_out3_8_0_empty_n;
output   sum_out3_8_0_read;
input  [2:0] sum_out3_8_0_num_data_valid;
input  [2:0] sum_out3_8_0_fifo_cap;
input  [31:0] sum_out3_8_1_dout;
input   sum_out3_8_1_empty_n;
output   sum_out3_8_1_read;
input  [2:0] sum_out3_8_1_num_data_valid;
input  [2:0] sum_out3_8_1_fifo_cap;
input  [31:0] sum_out3_8_2_dout;
input   sum_out3_8_2_empty_n;
output   sum_out3_8_2_read;
input  [2:0] sum_out3_8_2_num_data_valid;
input  [2:0] sum_out3_8_2_fifo_cap;
input  [31:0] sum_out3_8_3_dout;
input   sum_out3_8_3_empty_n;
output   sum_out3_8_3_read;
input  [2:0] sum_out3_8_3_num_data_valid;
input  [2:0] sum_out3_8_3_fifo_cap;
input  [31:0] sum_out3_8_4_dout;
input   sum_out3_8_4_empty_n;
output   sum_out3_8_4_read;
input  [2:0] sum_out3_8_4_num_data_valid;
input  [2:0] sum_out3_8_4_fifo_cap;
input  [31:0] sum_out3_8_5_dout;
input   sum_out3_8_5_empty_n;
output   sum_out3_8_5_read;
input  [2:0] sum_out3_8_5_num_data_valid;
input  [2:0] sum_out3_8_5_fifo_cap;
output  [31:0] conv_out3_0_0_din;
input   conv_out3_0_0_full_n;
output   conv_out3_0_0_write;
input  [31:0] conv_out3_0_0_num_data_valid;
input  [31:0] conv_out3_0_0_fifo_cap;
output  [31:0] conv_out3_0_1_din;
input   conv_out3_0_1_full_n;
output   conv_out3_0_1_write;
input  [31:0] conv_out3_0_1_num_data_valid;
input  [31:0] conv_out3_0_1_fifo_cap;
output  [31:0] conv_out3_0_2_din;
input   conv_out3_0_2_full_n;
output   conv_out3_0_2_write;
input  [31:0] conv_out3_0_2_num_data_valid;
input  [31:0] conv_out3_0_2_fifo_cap;
output  [31:0] conv_out3_0_3_din;
input   conv_out3_0_3_full_n;
output   conv_out3_0_3_write;
input  [31:0] conv_out3_0_3_num_data_valid;
input  [31:0] conv_out3_0_3_fifo_cap;
output  [31:0] conv_out3_0_4_din;
input   conv_out3_0_4_full_n;
output   conv_out3_0_4_write;
input  [31:0] conv_out3_0_4_num_data_valid;
input  [31:0] conv_out3_0_4_fifo_cap;
output  [31:0] conv_out3_0_5_din;
input   conv_out3_0_5_full_n;
output   conv_out3_0_5_write;
input  [31:0] conv_out3_0_5_num_data_valid;
input  [31:0] conv_out3_0_5_fifo_cap;
output  [31:0] conv_out3_0_6_din;
input   conv_out3_0_6_full_n;
output   conv_out3_0_6_write;
input  [31:0] conv_out3_0_6_num_data_valid;
input  [31:0] conv_out3_0_6_fifo_cap;
output  [31:0] conv_out3_1_0_din;
input   conv_out3_1_0_full_n;
output   conv_out3_1_0_write;
input  [31:0] conv_out3_1_0_num_data_valid;
input  [31:0] conv_out3_1_0_fifo_cap;
output  [31:0] conv_out3_1_1_din;
input   conv_out3_1_1_full_n;
output   conv_out3_1_1_write;
input  [31:0] conv_out3_1_1_num_data_valid;
input  [31:0] conv_out3_1_1_fifo_cap;
output  [31:0] conv_out3_1_2_din;
input   conv_out3_1_2_full_n;
output   conv_out3_1_2_write;
input  [31:0] conv_out3_1_2_num_data_valid;
input  [31:0] conv_out3_1_2_fifo_cap;
output  [31:0] conv_out3_1_3_din;
input   conv_out3_1_3_full_n;
output   conv_out3_1_3_write;
input  [31:0] conv_out3_1_3_num_data_valid;
input  [31:0] conv_out3_1_3_fifo_cap;
output  [31:0] conv_out3_1_4_din;
input   conv_out3_1_4_full_n;
output   conv_out3_1_4_write;
input  [31:0] conv_out3_1_4_num_data_valid;
input  [31:0] conv_out3_1_4_fifo_cap;
output  [31:0] conv_out3_1_5_din;
input   conv_out3_1_5_full_n;
output   conv_out3_1_5_write;
input  [31:0] conv_out3_1_5_num_data_valid;
input  [31:0] conv_out3_1_5_fifo_cap;
output  [31:0] conv_out3_1_6_din;
input   conv_out3_1_6_full_n;
output   conv_out3_1_6_write;
input  [31:0] conv_out3_1_6_num_data_valid;
input  [31:0] conv_out3_1_6_fifo_cap;
output   start_out;
output   start_write;

reg ap_done;
reg ap_idle;
reg sum_out3_0_0_read;
reg sum_out3_0_1_read;
reg sum_out3_0_2_read;
reg sum_out3_0_3_read;
reg sum_out3_0_4_read;
reg sum_out3_0_5_read;
reg sum_out3_1_0_read;
reg sum_out3_1_1_read;
reg sum_out3_1_2_read;
reg sum_out3_1_3_read;
reg sum_out3_1_4_read;
reg sum_out3_1_5_read;
reg sum_out3_2_0_read;
reg sum_out3_2_1_read;
reg sum_out3_2_2_read;
reg sum_out3_2_3_read;
reg sum_out3_2_4_read;
reg sum_out3_2_5_read;
reg sum_out3_3_0_read;
reg sum_out3_3_1_read;
reg sum_out3_3_2_read;
reg sum_out3_3_3_read;
reg sum_out3_3_4_read;
reg sum_out3_3_5_read;
reg sum_out3_4_0_read;
reg sum_out3_4_1_read;
reg sum_out3_4_2_read;
reg sum_out3_4_3_read;
reg sum_out3_4_4_read;
reg sum_out3_4_5_read;
reg sum_out3_5_0_read;
reg sum_out3_5_1_read;
reg sum_out3_5_2_read;
reg sum_out3_5_3_read;
reg sum_out3_5_4_read;
reg sum_out3_5_5_read;
reg sum_out3_6_0_read;
reg sum_out3_6_1_read;
reg sum_out3_6_2_read;
reg sum_out3_6_3_read;
reg sum_out3_6_4_read;
reg sum_out3_6_5_read;
reg sum_out3_7_0_read;
reg sum_out3_7_1_read;
reg sum_out3_7_2_read;
reg sum_out3_7_3_read;
reg sum_out3_7_4_read;
reg sum_out3_7_5_read;
reg sum_out3_8_0_read;
reg sum_out3_8_1_read;
reg sum_out3_8_2_read;
reg sum_out3_8_3_read;
reg sum_out3_8_4_read;
reg sum_out3_8_5_read;
reg conv_out3_0_0_write;
reg conv_out3_0_1_write;
reg conv_out3_0_2_write;
reg conv_out3_0_3_write;
reg conv_out3_0_4_write;
reg conv_out3_0_5_write;
reg conv_out3_0_6_write;
reg conv_out3_1_0_write;
reg conv_out3_1_1_write;
reg conv_out3_1_2_write;
reg conv_out3_1_3_write;
reg conv_out3_1_4_write;
reg conv_out3_1_5_write;
reg conv_out3_1_6_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0_grp1;
reg    ap_block_pp0_stage0_subdone_grp1_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_state1_pp0_stage0_iter0_grp2;
reg    ap_block_pp0_stage0_subdone_grp2_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp2;
reg    ap_block_state1_pp0_stage0_iter0_grp3;
reg    ap_block_pp0_stage0_subdone_grp3_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp3;
reg    ap_block_state1_pp0_stage0_iter0_grp4;
reg    ap_block_pp0_stage0_subdone_grp4_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp4;
reg    ap_block_state1_pp0_stage0_iter0_grp5;
reg    ap_block_pp0_stage0_subdone_grp5_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp5;
reg    ap_block_state1_pp0_stage0_iter0_grp6;
reg    ap_block_pp0_stage0_subdone_grp6_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp6;
reg    ap_block_state1_pp0_stage0_iter0_grp7;
reg    ap_block_pp0_stage0_subdone_grp7_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp7;
reg    ap_block_state1_pp0_stage0_iter0_grp8;
reg    ap_block_pp0_stage0_subdone_grp8_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp8;
reg    ap_block_state1_pp0_stage0_iter0_grp9;
reg    ap_block_pp0_stage0_subdone_grp9_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp9;
reg    ap_block_state1_pp0_stage0_iter0_grp10;
reg    ap_block_pp0_stage0_subdone_grp10_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp10;
reg    ap_block_state1_pp0_stage0_iter0_grp11;
reg    ap_block_pp0_stage0_subdone_grp11_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp11;
reg    ap_block_state1_pp0_stage0_iter0_grp12;
reg    ap_block_pp0_stage0_subdone_grp12_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp12;
reg    ap_block_state1_pp0_stage0_iter0_grp13;
reg    ap_block_pp0_stage0_subdone_grp13_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp13;
reg    ap_block_state1_pp0_stage0_iter0_grp14;
reg    ap_block_pp0_stage0_subdone_grp14_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp14;
reg    ap_block_state1_pp0_stage0_iter0_grp15;
reg    ap_block_pp0_stage0_subdone_grp15_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp15;
reg    ap_block_state1_pp0_stage0_iter0_grp16;
reg    ap_block_pp0_stage0_subdone_grp16_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp16;
reg    ap_block_state1_pp0_stage0_iter0_grp17;
reg    ap_block_pp0_stage0_subdone_grp17_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp17;
reg    ap_block_state1_pp0_stage0_iter0_grp18;
reg    ap_block_pp0_stage0_subdone_grp18_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp18;
reg    ap_block_state1_pp0_stage0_iter0_grp19;
reg    ap_block_pp0_stage0_subdone_grp19_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp19;
reg    ap_block_state1_pp0_stage0_iter0_grp20;
reg    ap_block_pp0_stage0_subdone_grp20_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp20;
reg    ap_block_state1_pp0_stage0_iter0_grp21;
reg    ap_block_pp0_stage0_subdone_grp21_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp21;
reg    ap_block_state1_pp0_stage0_iter0_grp22;
reg    ap_block_pp0_stage0_subdone_grp22_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp22;
reg    ap_block_state1_pp0_stage0_iter0_grp23;
reg    ap_block_pp0_stage0_subdone_grp23_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp23;
reg    ap_block_state1_pp0_stage0_iter0_grp24;
reg    ap_block_pp0_stage0_subdone_grp24_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp24;
reg    ap_block_state1_pp0_stage0_iter0_grp25;
reg    ap_block_pp0_stage0_subdone_grp25_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp25;
reg    ap_block_state1_pp0_stage0_iter0_grp26;
reg    ap_block_pp0_stage0_subdone_grp26_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp26;
reg    ap_block_pp0_stage0_subdone_grp1_done_reg;
reg    ap_block_pp0_stage0_subdone_grp4_done_reg;
reg    ap_block_pp0_stage0_subdone_grp7_done_reg;
reg    ap_block_pp0_stage0_subdone_grp9_done_reg;
reg    ap_block_pp0_stage0_subdone_grp11_done_reg;
reg    ap_block_pp0_stage0_subdone_grp12_done_reg;
reg    ap_block_pp0_stage0_subdone_grp13_done_reg;
reg    ap_block_pp0_stage0_subdone_grp14_done_reg;
reg    ap_block_pp0_stage0_subdone_grp15_done_reg;
reg    ap_block_pp0_stage0_subdone_grp16_done_reg;
reg    ap_block_pp0_stage0_subdone_grp17_done_reg;
reg    ap_block_pp0_stage0_subdone_grp18_done_reg;
reg    ap_block_pp0_stage0_subdone_grp19_done_reg;
reg    ap_block_pp0_stage0_subdone_grp20_done_reg;
reg    sum_out3_0_0_blk_n;
wire    ap_block_pp0_stage0_grp1;
reg    sum_out3_0_1_blk_n;
wire    ap_block_pp0_stage0_grp2;
reg    sum_out3_0_2_blk_n;
wire    ap_block_pp0_stage0_grp3;
reg    sum_out3_0_3_blk_n;
wire    ap_block_pp0_stage0_grp4;
reg    sum_out3_0_4_blk_n;
wire    ap_block_pp0_stage0_grp5;
reg    sum_out3_0_5_blk_n;
wire    ap_block_pp0_stage0_grp6;
reg    sum_out3_1_0_blk_n;
wire    ap_block_pp0_stage0_grp7;
reg    sum_out3_1_1_blk_n;
reg    sum_out3_1_2_blk_n;
wire    ap_block_pp0_stage0_grp8;
reg    sum_out3_1_3_blk_n;
wire    ap_block_pp0_stage0_grp9;
reg    sum_out3_1_4_blk_n;
reg    sum_out3_1_5_blk_n;
wire    ap_block_pp0_stage0_grp10;
reg    sum_out3_2_0_blk_n;
wire    ap_block_pp0_stage0_grp11;
reg    sum_out3_2_1_blk_n;
reg    sum_out3_2_2_blk_n;
reg    sum_out3_2_3_blk_n;
wire    ap_block_pp0_stage0_grp12;
reg    sum_out3_2_4_blk_n;
reg    sum_out3_2_5_blk_n;
reg    sum_out3_3_0_blk_n;
wire    ap_block_pp0_stage0_grp13;
reg    sum_out3_3_1_blk_n;
reg    sum_out3_3_2_blk_n;
reg    sum_out3_3_3_blk_n;
wire    ap_block_pp0_stage0_grp14;
reg    sum_out3_3_4_blk_n;
reg    sum_out3_3_5_blk_n;
reg    sum_out3_4_0_blk_n;
wire    ap_block_pp0_stage0_grp15;
reg    sum_out3_4_1_blk_n;
reg    sum_out3_4_2_blk_n;
reg    sum_out3_4_3_blk_n;
wire    ap_block_pp0_stage0_grp16;
reg    sum_out3_4_4_blk_n;
reg    sum_out3_4_5_blk_n;
reg    sum_out3_5_0_blk_n;
wire    ap_block_pp0_stage0_grp17;
reg    sum_out3_5_1_blk_n;
reg    sum_out3_5_2_blk_n;
reg    sum_out3_5_3_blk_n;
wire    ap_block_pp0_stage0_grp18;
reg    sum_out3_5_4_blk_n;
reg    sum_out3_5_5_blk_n;
reg    sum_out3_6_0_blk_n;
wire    ap_block_pp0_stage0_grp19;
reg    sum_out3_6_1_blk_n;
reg    sum_out3_6_2_blk_n;
reg    sum_out3_6_3_blk_n;
wire    ap_block_pp0_stage0_grp20;
reg    sum_out3_6_4_blk_n;
reg    sum_out3_6_5_blk_n;
reg    sum_out3_7_0_blk_n;
wire    ap_block_pp0_stage0_grp21;
reg    sum_out3_7_1_blk_n;
reg    sum_out3_7_2_blk_n;
reg    sum_out3_7_3_blk_n;
wire    ap_block_pp0_stage0_grp22;
reg    sum_out3_7_4_blk_n;
reg    sum_out3_7_5_blk_n;
reg    sum_out3_8_0_blk_n;
wire    ap_block_pp0_stage0_grp23;
reg    sum_out3_8_1_blk_n;
wire    ap_block_pp0_stage0_grp24;
reg    sum_out3_8_2_blk_n;
reg    sum_out3_8_3_blk_n;
wire    ap_block_pp0_stage0_grp25;
reg    sum_out3_8_4_blk_n;
wire    ap_block_pp0_stage0_grp26;
reg    sum_out3_8_5_blk_n;
reg    conv_out3_0_0_blk_n;
reg    conv_out3_0_1_blk_n;
reg    conv_out3_0_2_blk_n;
reg    conv_out3_0_3_blk_n;
reg    conv_out3_0_4_blk_n;
reg    conv_out3_0_5_blk_n;
reg    conv_out3_0_6_blk_n;
reg    conv_out3_1_0_blk_n;
reg    conv_out3_1_1_blk_n;
reg    conv_out3_1_2_blk_n;
reg    conv_out3_1_3_blk_n;
reg    conv_out3_1_4_blk_n;
reg    conv_out3_1_5_blk_n;
reg    conv_out3_1_6_blk_n;
wire   [31:0] add_ln172_1_fu_582_p2;
reg   [31:0] add_ln172_1_reg_744;
reg    ap_block_pp0_stage0_11001_grp1;
wire   [31:0] add_ln172_3_fu_594_p2;
reg   [31:0] add_ln172_3_reg_749;
reg    ap_block_pp0_stage0_11001_grp7;
wire   [31:0] add_ln172_5_fu_606_p2;
reg   [31:0] add_ln172_5_reg_754;
reg    ap_block_pp0_stage0_11001_grp11;
wire   [31:0] add_ln172_7_fu_618_p2;
reg   [31:0] add_ln172_7_reg_759;
reg    ap_block_pp0_stage0_11001_grp13;
wire   [31:0] add_ln172_9_fu_630_p2;
reg   [31:0] add_ln172_9_reg_764;
reg    ap_block_pp0_stage0_11001_grp15;
wire   [31:0] add_ln172_11_fu_642_p2;
reg   [31:0] add_ln172_11_reg_769;
reg    ap_block_pp0_stage0_11001_grp17;
wire   [31:0] add_ln172_13_fu_654_p2;
reg   [31:0] add_ln172_13_reg_774;
reg    ap_block_pp0_stage0_11001_grp19;
wire   [31:0] add_ln172_15_fu_666_p2;
reg   [31:0] add_ln172_15_reg_779;
reg    ap_block_pp0_stage0_11001_grp4;
wire   [31:0] add_ln172_17_fu_678_p2;
reg   [31:0] add_ln172_17_reg_784;
reg    ap_block_pp0_stage0_11001_grp9;
wire   [31:0] add_ln172_19_fu_690_p2;
reg   [31:0] add_ln172_19_reg_789;
reg    ap_block_pp0_stage0_11001_grp12;
wire   [31:0] add_ln172_21_fu_702_p2;
reg   [31:0] add_ln172_21_reg_794;
reg    ap_block_pp0_stage0_11001_grp14;
wire   [31:0] add_ln172_23_fu_714_p2;
reg   [31:0] add_ln172_23_reg_799;
reg    ap_block_pp0_stage0_11001_grp16;
wire   [31:0] add_ln172_25_fu_726_p2;
reg   [31:0] add_ln172_25_reg_804;
reg    ap_block_pp0_stage0_11001_grp18;
wire   [31:0] add_ln172_27_fu_738_p2;
reg   [31:0] add_ln172_27_reg_809;
reg    ap_block_pp0_stage0_11001_grp20;
reg    ap_block_pp0_stage0_11001_grp2;
reg    ap_block_pp0_stage0_11001_grp3;
reg    ap_block_pp0_stage0_11001_grp5;
reg    ap_block_pp0_stage0_11001_grp6;
reg    ap_block_pp0_stage0_11001_grp8;
reg    ap_block_pp0_stage0_11001_grp10;
reg    ap_block_pp0_stage0_11001_grp21;
reg    ap_block_pp0_stage0_11001_grp22;
reg    ap_block_pp0_stage0_11001_grp23;
reg    ap_block_pp0_stage0_11001_grp24;
reg    ap_block_pp0_stage0_11001_grp25;
reg    ap_block_pp0_stage0_11001_grp26;
reg    ap_block_pp0_stage0_01001_grp1;
reg    ap_block_pp0_stage0_01001_grp7;
reg    ap_block_pp0_stage0_01001_grp11;
reg    ap_block_pp0_stage0_01001_grp13;
reg    ap_block_pp0_stage0_01001_grp15;
reg    ap_block_pp0_stage0_01001_grp17;
reg    ap_block_pp0_stage0_01001_grp19;
reg    ap_block_pp0_stage0_01001_grp4;
reg    ap_block_pp0_stage0_01001_grp9;
reg    ap_block_pp0_stage0_01001_grp12;
reg    ap_block_pp0_stage0_01001_grp14;
reg    ap_block_pp0_stage0_01001_grp16;
reg    ap_block_pp0_stage0_01001_grp18;
reg    ap_block_pp0_stage0_01001_grp20;
wire   [31:0] add_ln172_fu_576_p2;
wire   [31:0] add_ln172_2_fu_588_p2;
wire   [31:0] add_ln172_4_fu_600_p2;
wire   [31:0] add_ln172_6_fu_612_p2;
wire   [31:0] add_ln172_8_fu_624_p2;
wire   [31:0] add_ln172_10_fu_636_p2;
wire   [31:0] add_ln172_12_fu_648_p2;
wire   [31:0] add_ln172_14_fu_660_p2;
wire   [31:0] add_ln172_16_fu_672_p2;
wire   [31:0] add_ln172_18_fu_684_p2;
wire   [31:0] add_ln172_20_fu_696_p2;
wire   [31:0] add_ln172_22_fu_708_p2;
wire   [31:0] add_ln172_24_fu_720_p2;
wire   [31:0] add_ln172_26_fu_732_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp2_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp3_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp4_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp5_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp6_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp7_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp8_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp9_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp10_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp11_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp12_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp13_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp14_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp15_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp16_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp17_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp18_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp19_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp20_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp21_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp22_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp23_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp24_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp25_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp26_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp1_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp4_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp7_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp9_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp11_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp12_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp13_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp14_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp15_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp16_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp17_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp18_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp19_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp20_done_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp10_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp10_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp10)) begin
                ap_block_pp0_stage0_subdone_grp10_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp11_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp11_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp11)) begin
            ap_block_pp0_stage0_subdone_grp11_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp11_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp11_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp11)) begin
                ap_block_pp0_stage0_subdone_grp11_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp12_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp12_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp12)) begin
            ap_block_pp0_stage0_subdone_grp12_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp12_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp12_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp12)) begin
                ap_block_pp0_stage0_subdone_grp12_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp13_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp13_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp13)) begin
            ap_block_pp0_stage0_subdone_grp13_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp13_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp13_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp13)) begin
                ap_block_pp0_stage0_subdone_grp13_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp14_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp14_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp14)) begin
            ap_block_pp0_stage0_subdone_grp14_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp14_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp14_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp14)) begin
                ap_block_pp0_stage0_subdone_grp14_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp15_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp15_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp15)) begin
            ap_block_pp0_stage0_subdone_grp15_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp15_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp15_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp15)) begin
                ap_block_pp0_stage0_subdone_grp15_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp16_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp16_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp16)) begin
            ap_block_pp0_stage0_subdone_grp16_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp16_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp16_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp16)) begin
                ap_block_pp0_stage0_subdone_grp16_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp17_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp17_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp17)) begin
            ap_block_pp0_stage0_subdone_grp17_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp17_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp17_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp17)) begin
                ap_block_pp0_stage0_subdone_grp17_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp18_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp18_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp18)) begin
            ap_block_pp0_stage0_subdone_grp18_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp18_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp18_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp18)) begin
                ap_block_pp0_stage0_subdone_grp18_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp19_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp19_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp19)) begin
            ap_block_pp0_stage0_subdone_grp19_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp19_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp19_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp19)) begin
                ap_block_pp0_stage0_subdone_grp19_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp1_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp1)) begin
            ap_block_pp0_stage0_subdone_grp1_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp1)) begin
                ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp20_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp20_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp20)) begin
            ap_block_pp0_stage0_subdone_grp20_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp20_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp20_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp20)) begin
                ap_block_pp0_stage0_subdone_grp20_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp21_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp21_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp21)) begin
                ap_block_pp0_stage0_subdone_grp21_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp22_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp22_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp22)) begin
                ap_block_pp0_stage0_subdone_grp22_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp23_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp23_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp23)) begin
                ap_block_pp0_stage0_subdone_grp23_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp24_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp24_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp24)) begin
                ap_block_pp0_stage0_subdone_grp24_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp25_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp25_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp25)) begin
                ap_block_pp0_stage0_subdone_grp25_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp26_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp26_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp26)) begin
                ap_block_pp0_stage0_subdone_grp26_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp2_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp2_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp2)) begin
                ap_block_pp0_stage0_subdone_grp2_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp3_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp3_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp3)) begin
                ap_block_pp0_stage0_subdone_grp3_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp4_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp4_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp4)) begin
            ap_block_pp0_stage0_subdone_grp4_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp4_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp4_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp4)) begin
                ap_block_pp0_stage0_subdone_grp4_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp5_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp5_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp5)) begin
                ap_block_pp0_stage0_subdone_grp5_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp6_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp6_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp6)) begin
                ap_block_pp0_stage0_subdone_grp6_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp7_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp7_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp7)) begin
            ap_block_pp0_stage0_subdone_grp7_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp7_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp7_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp7)) begin
                ap_block_pp0_stage0_subdone_grp7_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp8_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp8_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp8)) begin
                ap_block_pp0_stage0_subdone_grp8_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp9_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp9_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp9)) begin
            ap_block_pp0_stage0_subdone_grp9_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp9_done_reg_iter0 <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp9_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp9)) begin
                ap_block_pp0_stage0_subdone_grp9_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= real_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp17) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_11_reg_769 <= add_ln172_11_fu_642_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp19) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_13_reg_774 <= add_ln172_13_fu_654_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_15_reg_779 <= add_ln172_15_fu_666_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_17_reg_784 <= add_ln172_17_fu_678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp12) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_19_reg_789 <= add_ln172_19_fu_690_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_1_reg_744 <= add_ln172_1_fu_582_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp14) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_21_reg_794 <= add_ln172_21_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp16) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_23_reg_799 <= add_ln172_23_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp18) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_25_reg_804 <= add_ln172_25_fu_726_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp20) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_27_reg_809 <= add_ln172_27_fu_738_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp7) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_3_reg_749 <= add_ln172_3_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp11) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_5_reg_754 <= add_ln172_5_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp13) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_7_reg_759 <= add_ln172_7_fu_618_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp15) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln172_9_reg_764 <= add_ln172_9_fu_630_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_0_blk_n = conv_out3_0_0_full_n;
    end else begin
        conv_out3_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_0_write = 1'b1;
    end else begin
        conv_out3_0_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp7) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_1_blk_n = conv_out3_0_1_full_n;
    end else begin
        conv_out3_0_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_1_write = 1'b1;
    end else begin
        conv_out3_0_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp11) & (1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_2_blk_n = conv_out3_0_2_full_n;
    end else begin
        conv_out3_0_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_2_write = 1'b1;
    end else begin
        conv_out3_0_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp13) & (1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_3_blk_n = conv_out3_0_3_full_n;
    end else begin
        conv_out3_0_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_3_write = 1'b1;
    end else begin
        conv_out3_0_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp15) & (1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_4_blk_n = conv_out3_0_4_full_n;
    end else begin
        conv_out3_0_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_4_write = 1'b1;
    end else begin
        conv_out3_0_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg) & (1'b0 == ap_block_pp0_stage0_grp17) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_5_blk_n = conv_out3_0_5_full_n;
    end else begin
        conv_out3_0_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp17) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_5_write = 1'b1;
    end else begin
        conv_out3_0_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg) & (1'b0 == ap_block_pp0_stage0_grp19) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_6_blk_n = conv_out3_0_6_full_n;
    end else begin
        conv_out3_0_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp19) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_0_6_write = 1'b1;
    end else begin
        conv_out3_0_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp4) & (1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_0_blk_n = conv_out3_1_0_full_n;
    end else begin
        conv_out3_1_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_0_write = 1'b1;
    end else begin
        conv_out3_1_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp9) & (1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_1_blk_n = conv_out3_1_1_full_n;
    end else begin
        conv_out3_1_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_1_write = 1'b1;
    end else begin
        conv_out3_1_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp12) & (1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_2_blk_n = conv_out3_1_2_full_n;
    end else begin
        conv_out3_1_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_2_write = 1'b1;
    end else begin
        conv_out3_1_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp14) & (1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_3_blk_n = conv_out3_1_3_full_n;
    end else begin
        conv_out3_1_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_3_write = 1'b1;
    end else begin
        conv_out3_1_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp16) & (1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_4_blk_n = conv_out3_1_4_full_n;
    end else begin
        conv_out3_1_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_4_write = 1'b1;
    end else begin
        conv_out3_1_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg) & (1'b0 == ap_block_pp0_stage0_grp18) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_5_blk_n = conv_out3_1_5_full_n;
    end else begin
        conv_out3_1_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp18) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_5_write = 1'b1;
    end else begin
        conv_out3_1_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg) & (1'b0 == ap_block_pp0_stage0_grp20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_6_blk_n = conv_out3_1_6_full_n;
    end else begin
        conv_out3_1_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out3_1_6_write = 1'b1;
    end else begin
        conv_out3_1_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_0_0_blk_n = sum_out3_0_0_empty_n;
    end else begin
        sum_out3_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_0_0_read = 1'b1;
    end else begin
        sum_out3_0_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp2) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_0_1_blk_n = sum_out3_0_1_empty_n;
    end else begin
        sum_out3_0_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp2) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_0_1_read = 1'b1;
    end else begin
        sum_out3_0_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp3) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_0_2_blk_n = sum_out3_0_2_empty_n;
    end else begin
        sum_out3_0_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp3) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_0_2_read = 1'b1;
    end else begin
        sum_out3_0_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp4) & (1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_0_3_blk_n = sum_out3_0_3_empty_n;
    end else begin
        sum_out3_0_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp4) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_0_3_read = 1'b1;
    end else begin
        sum_out3_0_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp5) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_0_4_blk_n = sum_out3_0_4_empty_n;
    end else begin
        sum_out3_0_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp5) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_0_4_read = 1'b1;
    end else begin
        sum_out3_0_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp6) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_0_5_blk_n = sum_out3_0_5_empty_n;
    end else begin
        sum_out3_0_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp6) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_0_5_read = 1'b1;
    end else begin
        sum_out3_0_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp7) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_1_0_blk_n = sum_out3_1_0_empty_n;
    end else begin
        sum_out3_1_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp7) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_1_0_read = 1'b1;
    end else begin
        sum_out3_1_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_1_1_blk_n = sum_out3_1_1_empty_n;
    end else begin
        sum_out3_1_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_1_1_read = 1'b1;
    end else begin
        sum_out3_1_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp8) & (1'b0 == ap_block_pp0_stage0_subdone_grp8_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_1_2_blk_n = sum_out3_1_2_empty_n;
    end else begin
        sum_out3_1_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp8_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp8) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_1_2_read = 1'b1;
    end else begin
        sum_out3_1_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp9) & (1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_1_3_blk_n = sum_out3_1_3_empty_n;
    end else begin
        sum_out3_1_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp9) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_1_3_read = 1'b1;
    end else begin
        sum_out3_1_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp4) & (1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_1_4_blk_n = sum_out3_1_4_empty_n;
    end else begin
        sum_out3_1_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp4) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_1_4_read = 1'b1;
    end else begin
        sum_out3_1_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp10) & (1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_1_5_blk_n = sum_out3_1_5_empty_n;
    end else begin
        sum_out3_1_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp10) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_1_5_read = 1'b1;
    end else begin
        sum_out3_1_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp11) & (1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_2_0_blk_n = sum_out3_2_0_empty_n;
    end else begin
        sum_out3_2_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp11) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_2_0_read = 1'b1;
    end else begin
        sum_out3_2_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp7) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_2_1_blk_n = sum_out3_2_1_empty_n;
    end else begin
        sum_out3_2_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp7) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_2_1_read = 1'b1;
    end else begin
        sum_out3_2_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_2_2_blk_n = sum_out3_2_2_empty_n;
    end else begin
        sum_out3_2_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_2_2_read = 1'b1;
    end else begin
        sum_out3_2_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp12) & (1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_2_3_blk_n = sum_out3_2_3_empty_n;
    end else begin
        sum_out3_2_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp12) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_2_3_read = 1'b1;
    end else begin
        sum_out3_2_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp9) & (1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_2_4_blk_n = sum_out3_2_4_empty_n;
    end else begin
        sum_out3_2_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp9) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_2_4_read = 1'b1;
    end else begin
        sum_out3_2_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp4) & (1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_2_5_blk_n = sum_out3_2_5_empty_n;
    end else begin
        sum_out3_2_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp4) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_2_5_read = 1'b1;
    end else begin
        sum_out3_2_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp13) & (1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_3_0_blk_n = sum_out3_3_0_empty_n;
    end else begin
        sum_out3_3_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp13) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_3_0_read = 1'b1;
    end else begin
        sum_out3_3_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp11) & (1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_3_1_blk_n = sum_out3_3_1_empty_n;
    end else begin
        sum_out3_3_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp11) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_3_1_read = 1'b1;
    end else begin
        sum_out3_3_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp7) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_3_2_blk_n = sum_out3_3_2_empty_n;
    end else begin
        sum_out3_3_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp7) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_3_2_read = 1'b1;
    end else begin
        sum_out3_3_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp14) & (1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_3_3_blk_n = sum_out3_3_3_empty_n;
    end else begin
        sum_out3_3_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp14) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_3_3_read = 1'b1;
    end else begin
        sum_out3_3_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp12) & (1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_3_4_blk_n = sum_out3_3_4_empty_n;
    end else begin
        sum_out3_3_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp12) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_3_4_read = 1'b1;
    end else begin
        sum_out3_3_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp9) & (1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_3_5_blk_n = sum_out3_3_5_empty_n;
    end else begin
        sum_out3_3_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp9) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_3_5_read = 1'b1;
    end else begin
        sum_out3_3_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp15) & (1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_4_0_blk_n = sum_out3_4_0_empty_n;
    end else begin
        sum_out3_4_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp15) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_4_0_read = 1'b1;
    end else begin
        sum_out3_4_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp13) & (1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_4_1_blk_n = sum_out3_4_1_empty_n;
    end else begin
        sum_out3_4_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp13) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_4_1_read = 1'b1;
    end else begin
        sum_out3_4_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp11) & (1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_4_2_blk_n = sum_out3_4_2_empty_n;
    end else begin
        sum_out3_4_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp11) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_4_2_read = 1'b1;
    end else begin
        sum_out3_4_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp16) & (1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_4_3_blk_n = sum_out3_4_3_empty_n;
    end else begin
        sum_out3_4_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp16) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_4_3_read = 1'b1;
    end else begin
        sum_out3_4_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp14) & (1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_4_4_blk_n = sum_out3_4_4_empty_n;
    end else begin
        sum_out3_4_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp14) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_4_4_read = 1'b1;
    end else begin
        sum_out3_4_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp12) & (1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_4_5_blk_n = sum_out3_4_5_empty_n;
    end else begin
        sum_out3_4_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp12) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_4_5_read = 1'b1;
    end else begin
        sum_out3_4_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp17) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_5_0_blk_n = sum_out3_5_0_empty_n;
    end else begin
        sum_out3_5_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp17) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_5_0_read = 1'b1;
    end else begin
        sum_out3_5_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp15) & (1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_5_1_blk_n = sum_out3_5_1_empty_n;
    end else begin
        sum_out3_5_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp15) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_5_1_read = 1'b1;
    end else begin
        sum_out3_5_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp13) & (1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_5_2_blk_n = sum_out3_5_2_empty_n;
    end else begin
        sum_out3_5_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp13) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_5_2_read = 1'b1;
    end else begin
        sum_out3_5_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp18) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_5_3_blk_n = sum_out3_5_3_empty_n;
    end else begin
        sum_out3_5_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp18) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_5_3_read = 1'b1;
    end else begin
        sum_out3_5_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp16) & (1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_5_4_blk_n = sum_out3_5_4_empty_n;
    end else begin
        sum_out3_5_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp16) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_5_4_read = 1'b1;
    end else begin
        sum_out3_5_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp14) & (1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_5_5_blk_n = sum_out3_5_5_empty_n;
    end else begin
        sum_out3_5_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp14) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_5_5_read = 1'b1;
    end else begin
        sum_out3_5_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp19) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_6_0_blk_n = sum_out3_6_0_empty_n;
    end else begin
        sum_out3_6_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp19) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_6_0_read = 1'b1;
    end else begin
        sum_out3_6_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp17) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_6_1_blk_n = sum_out3_6_1_empty_n;
    end else begin
        sum_out3_6_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp17) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_6_1_read = 1'b1;
    end else begin
        sum_out3_6_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp15) & (1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_6_2_blk_n = sum_out3_6_2_empty_n;
    end else begin
        sum_out3_6_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp15) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_6_2_read = 1'b1;
    end else begin
        sum_out3_6_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp20) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_6_3_blk_n = sum_out3_6_3_empty_n;
    end else begin
        sum_out3_6_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp20) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_6_3_read = 1'b1;
    end else begin
        sum_out3_6_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp18) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_6_4_blk_n = sum_out3_6_4_empty_n;
    end else begin
        sum_out3_6_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp18) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_6_4_read = 1'b1;
    end else begin
        sum_out3_6_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp16) & (1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg_iter0) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_6_5_blk_n = sum_out3_6_5_empty_n;
    end else begin
        sum_out3_6_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp16) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_6_5_read = 1'b1;
    end else begin
        sum_out3_6_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp21_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp21) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_7_0_blk_n = sum_out3_7_0_empty_n;
    end else begin
        sum_out3_7_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp21_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp21) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_7_0_read = 1'b1;
    end else begin
        sum_out3_7_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp19) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_7_1_blk_n = sum_out3_7_1_empty_n;
    end else begin
        sum_out3_7_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp19) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_7_1_read = 1'b1;
    end else begin
        sum_out3_7_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp17) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_7_2_blk_n = sum_out3_7_2_empty_n;
    end else begin
        sum_out3_7_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp17) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_7_2_read = 1'b1;
    end else begin
        sum_out3_7_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp22_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp22) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_7_3_blk_n = sum_out3_7_3_empty_n;
    end else begin
        sum_out3_7_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp22_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp22) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_7_3_read = 1'b1;
    end else begin
        sum_out3_7_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp20) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_7_4_blk_n = sum_out3_7_4_empty_n;
    end else begin
        sum_out3_7_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp20) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_7_4_read = 1'b1;
    end else begin
        sum_out3_7_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp18) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_7_5_blk_n = sum_out3_7_5_empty_n;
    end else begin
        sum_out3_7_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp18) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_7_5_read = 1'b1;
    end else begin
        sum_out3_7_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp23_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp23) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_8_0_blk_n = sum_out3_8_0_empty_n;
    end else begin
        sum_out3_8_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp23_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp23) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_8_0_read = 1'b1;
    end else begin
        sum_out3_8_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp24_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp24) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_8_1_blk_n = sum_out3_8_1_empty_n;
    end else begin
        sum_out3_8_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp24_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp24) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_8_1_read = 1'b1;
    end else begin
        sum_out3_8_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp19) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_8_2_blk_n = sum_out3_8_2_empty_n;
    end else begin
        sum_out3_8_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp19) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_8_2_read = 1'b1;
    end else begin
        sum_out3_8_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp25_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp25) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_8_3_blk_n = sum_out3_8_3_empty_n;
    end else begin
        sum_out3_8_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp25_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp25) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_8_3_read = 1'b1;
    end else begin
        sum_out3_8_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp26_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp26) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_8_4_blk_n = sum_out3_8_4_empty_n;
    end else begin
        sum_out3_8_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp26_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp26) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_8_4_read = 1'b1;
    end else begin
        sum_out3_8_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_grp20) & (ap_done_reg == 1'b0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_8_5_blk_n = sum_out3_8_5_empty_n;
    end else begin
        sum_out3_8_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp20) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_out3_8_5_read = 1'b1;
    end else begin
        sum_out3_8_5_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln172_10_fu_636_p2 = (sum_out3_5_0_dout + sum_out3_7_2_dout);

assign add_ln172_11_fu_642_p2 = (add_ln172_10_fu_636_p2 + sum_out3_6_1_dout);

assign add_ln172_12_fu_648_p2 = (sum_out3_6_0_dout + sum_out3_8_2_dout);

assign add_ln172_13_fu_654_p2 = (add_ln172_12_fu_648_p2 + sum_out3_7_1_dout);

assign add_ln172_14_fu_660_p2 = (sum_out3_0_3_dout + sum_out3_2_5_dout);

assign add_ln172_15_fu_666_p2 = (add_ln172_14_fu_660_p2 + sum_out3_1_4_dout);

assign add_ln172_16_fu_672_p2 = (sum_out3_1_3_dout + sum_out3_3_5_dout);

assign add_ln172_17_fu_678_p2 = (add_ln172_16_fu_672_p2 + sum_out3_2_4_dout);

assign add_ln172_18_fu_684_p2 = (sum_out3_2_3_dout + sum_out3_4_5_dout);

assign add_ln172_19_fu_690_p2 = (add_ln172_18_fu_684_p2 + sum_out3_3_4_dout);

assign add_ln172_1_fu_582_p2 = (add_ln172_fu_576_p2 + sum_out3_1_1_dout);

assign add_ln172_20_fu_696_p2 = (sum_out3_3_3_dout + sum_out3_5_5_dout);

assign add_ln172_21_fu_702_p2 = (add_ln172_20_fu_696_p2 + sum_out3_4_4_dout);

assign add_ln172_22_fu_708_p2 = (sum_out3_4_3_dout + sum_out3_6_5_dout);

assign add_ln172_23_fu_714_p2 = (add_ln172_22_fu_708_p2 + sum_out3_5_4_dout);

assign add_ln172_24_fu_720_p2 = (sum_out3_5_3_dout + sum_out3_7_5_dout);

assign add_ln172_25_fu_726_p2 = (add_ln172_24_fu_720_p2 + sum_out3_6_4_dout);

assign add_ln172_26_fu_732_p2 = (sum_out3_6_3_dout + sum_out3_8_5_dout);

assign add_ln172_27_fu_738_p2 = (add_ln172_26_fu_732_p2 + sum_out3_7_4_dout);

assign add_ln172_2_fu_588_p2 = (sum_out3_1_0_dout + sum_out3_3_2_dout);

assign add_ln172_3_fu_594_p2 = (add_ln172_2_fu_588_p2 + sum_out3_2_1_dout);

assign add_ln172_4_fu_600_p2 = (sum_out3_2_0_dout + sum_out3_4_2_dout);

assign add_ln172_5_fu_606_p2 = (add_ln172_4_fu_600_p2 + sum_out3_3_1_dout);

assign add_ln172_6_fu_612_p2 = (sum_out3_3_0_dout + sum_out3_5_2_dout);

assign add_ln172_7_fu_618_p2 = (add_ln172_6_fu_612_p2 + sum_out3_4_1_dout);

assign add_ln172_8_fu_624_p2 = (sum_out3_4_0_dout + sum_out3_6_2_dout);

assign add_ln172_9_fu_630_p2 = (add_ln172_8_fu_624_p2 + sum_out3_5_1_dout);

assign add_ln172_fu_576_p2 = (sum_out3_0_0_dout + sum_out3_2_2_dout);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0_stage0_01001_grp1 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (conv_out3_0_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp1)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp11 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg) & (conv_out3_0_2_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp11)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp12 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg) & (conv_out3_1_2_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp12)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp13 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg) & (conv_out3_0_3_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp13)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp14 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg) & (conv_out3_1_3_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp14)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp15 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg) & (conv_out3_0_4_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp15)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp16 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg) & (conv_out3_1_4_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp16)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp17 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg) & (conv_out3_0_5_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp17)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp18 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg) & (conv_out3_1_5_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp18)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp19 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg) & (conv_out3_0_6_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp19)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp20 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg) & (conv_out3_1_6_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp20)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp4 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (conv_out3_1_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp4)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp7 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (conv_out3_0_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp7)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001_grp9 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg) & (conv_out3_1_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp9)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (conv_out3_0_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp10 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp10)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp11 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg) & (conv_out3_0_2_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp11)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp12 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg) & (conv_out3_1_2_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp12)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp13 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg) & (conv_out3_0_3_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp13)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp14 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg) & (conv_out3_1_3_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp14)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp15 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg) & (conv_out3_0_4_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp15)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp16 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg) & (conv_out3_1_4_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp16)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp17 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg) & (conv_out3_0_5_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp17)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp18 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg) & (conv_out3_1_5_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp18)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp19 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg) & (conv_out3_0_6_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp19)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp2 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp2)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp20 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg) & (conv_out3_1_6_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp20)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp21 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp21_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp21)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp22 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp22_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp22)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp23 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp23_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp23)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp24 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp24_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp24)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp25 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp25_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp25)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp26 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp26_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp26)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp3 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp3)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp4 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (conv_out3_1_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp4)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp5 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp5)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp6 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp6)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp7 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (conv_out3_0_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp7)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp8 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp8_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp8)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp9 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg) & (conv_out3_1_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp9)));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg) & (conv_out3_1_6_full_n == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg) & (conv_out3_0_6_full_n == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg) & (conv_out3_1_5_full_n == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg) & (conv_out3_0_5_full_n == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg) & (conv_out3_1_4_full_n == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg) & (conv_out3_0_4_full_n == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg) & (conv_out3_1_3_full_n == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg) & (conv_out3_0_3_full_n == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg) & (conv_out3_1_2_full_n == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg) & (conv_out3_0_2_full_n == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg) & (conv_out3_1_1_full_n 
    == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (conv_out3_0_1_full_n == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (conv_out3_1_0_full_n == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (conv_out3_0_0_full_n == 1'b0)))) | ((real_start == 1'b1) & ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp26_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp26)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp25_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp25)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp24_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp24)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp23_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp23)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp22_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp22)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp21_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp21)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg_iter0) 
    & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp20)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp19)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp18)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp17)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp16)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp15)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp14)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp13)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp12)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg_iter0) 
    & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp11)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp10)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp9)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp8_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp8)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp7)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp6)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp5)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp4)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp3)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp2)) 
    | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp1 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg) & (conv_out3_0_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp10 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp10)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp11 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg) & (conv_out3_0_2_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp11)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp12 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg) & (conv_out3_1_2_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp12_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp12)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp13 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg) & (conv_out3_0_3_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp13_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp13)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp14 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg) & (conv_out3_1_3_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp14_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp14)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp15 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg) & (conv_out3_0_4_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp15_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp15)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp16 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg) & (conv_out3_1_4_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp16_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp16)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp17 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg) & (conv_out3_0_5_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp17_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp17)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp18 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg) & (conv_out3_1_5_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp18)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp19 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg) & (conv_out3_0_6_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp19)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp2 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp2)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp20 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg) & (conv_out3_1_6_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp20_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp20)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp21 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp21_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp21)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp22 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp22_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp22)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp23 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp23_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp23)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp24 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp24_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp24)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp25 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp25_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp25)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp26 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp26_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp26)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp3 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp3)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp4 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (conv_out3_1_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp4)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp5 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp5)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp6 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp6)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp7 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (conv_out3_0_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp7)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp8 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp8_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp8)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp9 = ((ap_done_reg == 1'b1) | ((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg) & (conv_out3_1_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg_iter0) & (real_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_grp9)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp1 = ((sum_out3_1_1_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (sum_out3_0_0_empty_n == 1'b0) | (sum_out3_2_2_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp10 = ((ap_done_reg == 1'b1) | (sum_out3_1_5_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp11 = ((ap_done_reg == 1'b1) | (sum_out3_4_2_empty_n == 1'b0) | (sum_out3_3_1_empty_n == 1'b0) | (sum_out3_2_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp12 = ((ap_done_reg == 1'b1) | (sum_out3_4_5_empty_n == 1'b0) | (sum_out3_3_4_empty_n == 1'b0) | (sum_out3_2_3_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp13 = ((ap_done_reg == 1'b1) | (sum_out3_5_2_empty_n == 1'b0) | (sum_out3_4_1_empty_n == 1'b0) | (sum_out3_3_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp14 = ((ap_done_reg == 1'b1) | (sum_out3_5_5_empty_n == 1'b0) | (sum_out3_4_4_empty_n == 1'b0) | (sum_out3_3_3_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp15 = ((ap_done_reg == 1'b1) | (sum_out3_6_2_empty_n == 1'b0) | (sum_out3_5_1_empty_n == 1'b0) | (sum_out3_4_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp16 = ((ap_done_reg == 1'b1) | (sum_out3_6_5_empty_n == 1'b0) | (sum_out3_5_4_empty_n == 1'b0) | (sum_out3_4_3_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp17 = ((ap_done_reg == 1'b1) | (sum_out3_7_2_empty_n == 1'b0) | (sum_out3_6_1_empty_n == 1'b0) | (sum_out3_5_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp18 = ((ap_done_reg == 1'b1) | (sum_out3_7_5_empty_n == 1'b0) | (sum_out3_6_4_empty_n == 1'b0) | (sum_out3_5_3_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp19 = ((ap_done_reg == 1'b1) | (sum_out3_8_2_empty_n == 1'b0) | (sum_out3_7_1_empty_n == 1'b0) | (sum_out3_6_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp2 = ((sum_out3_0_1_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp20 = ((ap_done_reg == 1'b1) | (sum_out3_8_5_empty_n == 1'b0) | (sum_out3_7_4_empty_n == 1'b0) | (sum_out3_6_3_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp21 = ((ap_done_reg == 1'b1) | (sum_out3_7_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp22 = ((ap_done_reg == 1'b1) | (sum_out3_7_3_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp23 = ((ap_done_reg == 1'b1) | (sum_out3_8_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp24 = ((ap_done_reg == 1'b1) | (sum_out3_8_1_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp25 = ((ap_done_reg == 1'b1) | (sum_out3_8_3_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp26 = ((ap_done_reg == 1'b1) | (sum_out3_8_4_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp3 = ((sum_out3_0_2_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp4 = ((sum_out3_1_4_empty_n == 1'b0) | (sum_out3_0_3_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (sum_out3_2_5_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp5 = ((sum_out3_0_4_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp6 = ((sum_out3_0_5_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp7 = ((sum_out3_1_0_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (sum_out3_3_2_empty_n == 1'b0) | (sum_out3_2_1_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp8 = ((sum_out3_1_2_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_grp9 = ((sum_out3_1_3_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (sum_out3_3_5_empty_n == 1'b0) | (sum_out3_2_4_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = real_start;

assign ap_ready = internal_ap_ready;

assign conv_out3_0_0_din = add_ln172_1_reg_744;

assign conv_out3_0_1_din = add_ln172_3_reg_749;

assign conv_out3_0_2_din = add_ln172_5_reg_754;

assign conv_out3_0_3_din = add_ln172_7_reg_759;

assign conv_out3_0_4_din = add_ln172_9_reg_764;

assign conv_out3_0_5_din = add_ln172_11_reg_769;

assign conv_out3_0_6_din = add_ln172_13_reg_774;

assign conv_out3_1_0_din = add_ln172_15_reg_779;

assign conv_out3_1_1_din = add_ln172_17_reg_784;

assign conv_out3_1_2_din = add_ln172_19_reg_789;

assign conv_out3_1_3_din = add_ln172_21_reg_794;

assign conv_out3_1_4_din = add_ln172_23_reg_799;

assign conv_out3_1_5_din = add_ln172_25_reg_804;

assign conv_out3_1_6_din = add_ln172_27_reg_809;

assign start_out = real_start;

endmodule //CNN_stream_conv2d_3_stream_layer_post_9u_s
