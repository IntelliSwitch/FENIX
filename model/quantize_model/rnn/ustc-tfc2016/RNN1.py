# GENETARED BY NNDCT, DO NOT EDIT!

import torch
from torch import tensor
import pytorch_nndct as py_nndct

class RNN1(py_nndct.nn.NndctQuantModel):
    def __init__(self):
        super(RNN1, self).__init__()
        self.module_0 = py_nndct.nn.Input() #RNN1::input_0(RNN1::nndct_input_0)
        self.module_1 = py_nndct.nn.strided_slice() #RNN1::RNN1/1451(RNN1::nndct_strided_slice_1)
        self.module_2 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/ret.3(RNN1::nndct_select_2)
        self.module_3 = py_nndct.nn.Module('nndct_cast') #RNN1::RNN1/1468(RNN1::nndct_cast_3)
        self.module_4 = py_nndct.nn.strided_slice() #RNN1::RNN1/1473(RNN1::nndct_strided_slice_4)
        self.module_5 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/ret.5(RNN1::nndct_select_5)
        self.module_6 = py_nndct.nn.Module('nndct_cast') #RNN1::RNN1/1490(RNN1::nndct_cast_6)
        self.module_7 = py_nndct.nn.Module('nndct_cast') #RNN1::RNN1/1498(RNN1::nndct_cast_7)
        self.module_8 = py_nndct.nn.Module('nndct_cast') #RNN1::RNN1/1506(RNN1::nndct_cast_8)
        self.module_9 = py_nndct.nn.embedding(num_embeddings=1501, embedding_dim=10, padding_idx=-1) #RNN1::RNN1/Embedding[len_embedding]/ret.7(RNN1::nndct_embedding_9)
        self.module_10 = py_nndct.nn.embedding(num_embeddings=2561, embedding_dim=8, padding_idx=-1) #RNN1::RNN1/Embedding[ipd_embedding]/ret.9(RNN1::nndct_embedding_10)
        self.module_11 = py_nndct.nn.Cat() #RNN1::RNN1/ret.11(RNN1::nndct_concat_11)
        self.module_12 = py_nndct.nn.Linear(in_features=18, out_features=12, bias=True) #RNN1::RNN1/Linear[fc1]/ret.13(RNN1::nndct_dense_12)
        self.module_13 = py_nndct.nn.Module('nndct_permute') #RNN1::RNN1/ret.15(RNN1::nndct_permute_13)
        self.module_14 = py_nndct.nn.Module('nndct_shape') #RNN1::RNN1/1542(RNN1::nndct_shape_14)
        self.module_15 = py_nndct.nn.Module('nndct_zeros') #RNN1::RNN1/1552(RNN1::nndct_zeros_15)
        self.module_16 = py_nndct.nn.Module('nndct_cast') #RNN1::RNN1/1560(RNN1::nndct_cast_16)
        self.module_17 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1567(RNN1::nndct_select_17)
        self.module_18 = py_nndct.nn.strided_slice() #RNN1::RNN1/1572(RNN1::nndct_strided_slice_18)
        self.module_19 = py_nndct.nn.Cat() #RNN1::RNN1/ret.23(RNN1::nndct_concat_19)
        self.module_20 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1585(RNN1::nndct_select_20)
        self.module_21 = py_nndct.nn.strided_slice() #RNN1::RNN1/1590(RNN1::nndct_strided_slice_21)
        self.module_22 = py_nndct.nn.Linear(in_features=12, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[x2h]/ret.31(RNN1::nndct_dense_22)
        self.module_23 = py_nndct.nn.Linear(in_features=16, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[h2h]/1608(RNN1::nndct_dense_23)
        self.module_24 = py_nndct.nn.Add() #RNN1::RNN1/RNNCell[rnn]/ret.33(RNN1::nndct_elemwise_add_24)
        self.module_25 = py_nndct.nn.Tanh() #RNN1::RNN1/RNNCell[rnn]/ret.35(RNN1::nndct_tanh_25)
        self.module_26 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1616(RNN1::nndct_select_26)
        self.module_27 = py_nndct.nn.strided_slice() #RNN1::RNN1/1621(RNN1::nndct_strided_slice_27)
        self.module_28 = py_nndct.nn.Cat() #RNN1::RNN1/ret.39(RNN1::nndct_concat_28)
        self.module_29 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1634(RNN1::nndct_select_29)
        self.module_30 = py_nndct.nn.strided_slice() #RNN1::RNN1/1639(RNN1::nndct_strided_slice_30)
        self.module_31 = py_nndct.nn.Linear(in_features=12, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[x2h]/ret.47(RNN1::nndct_dense_31)
        self.module_32 = py_nndct.nn.Linear(in_features=16, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[h2h]/ret.49(RNN1::nndct_dense_32)
        self.module_33 = py_nndct.nn.Add() #RNN1::RNN1/RNNCell[rnn]/ret.51(RNN1::nndct_elemwise_add_33)
        self.module_34 = py_nndct.nn.Tanh() #RNN1::RNN1/RNNCell[rnn]/ret.53(RNN1::nndct_tanh_34)
        self.module_35 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1666(RNN1::nndct_select_35)
        self.module_36 = py_nndct.nn.strided_slice() #RNN1::RNN1/1671(RNN1::nndct_strided_slice_36)
        self.module_37 = py_nndct.nn.Cat() #RNN1::RNN1/ret.57(RNN1::nndct_concat_37)
        self.module_38 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1684(RNN1::nndct_select_38)
        self.module_39 = py_nndct.nn.strided_slice() #RNN1::RNN1/1689(RNN1::nndct_strided_slice_39)
        self.module_40 = py_nndct.nn.Linear(in_features=12, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[x2h]/ret.65(RNN1::nndct_dense_40)
        self.module_41 = py_nndct.nn.Linear(in_features=16, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[h2h]/ret.67(RNN1::nndct_dense_41)
        self.module_42 = py_nndct.nn.Add() #RNN1::RNN1/RNNCell[rnn]/ret.69(RNN1::nndct_elemwise_add_42)
        self.module_43 = py_nndct.nn.Tanh() #RNN1::RNN1/RNNCell[rnn]/ret.71(RNN1::nndct_tanh_43)
        self.module_44 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1716(RNN1::nndct_select_44)
        self.module_45 = py_nndct.nn.strided_slice() #RNN1::RNN1/1721(RNN1::nndct_strided_slice_45)
        self.module_46 = py_nndct.nn.Cat() #RNN1::RNN1/ret.75(RNN1::nndct_concat_46)
        self.module_47 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1734(RNN1::nndct_select_47)
        self.module_48 = py_nndct.nn.strided_slice() #RNN1::RNN1/1739(RNN1::nndct_strided_slice_48)
        self.module_49 = py_nndct.nn.Linear(in_features=12, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[x2h]/ret.83(RNN1::nndct_dense_49)
        self.module_50 = py_nndct.nn.Linear(in_features=16, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[h2h]/ret.85(RNN1::nndct_dense_50)
        self.module_51 = py_nndct.nn.Add() #RNN1::RNN1/RNNCell[rnn]/ret.87(RNN1::nndct_elemwise_add_51)
        self.module_52 = py_nndct.nn.Tanh() #RNN1::RNN1/RNNCell[rnn]/ret.89(RNN1::nndct_tanh_52)
        self.module_53 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1766(RNN1::nndct_select_53)
        self.module_54 = py_nndct.nn.strided_slice() #RNN1::RNN1/1771(RNN1::nndct_strided_slice_54)
        self.module_55 = py_nndct.nn.Cat() #RNN1::RNN1/ret.93(RNN1::nndct_concat_55)
        self.module_56 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1784(RNN1::nndct_select_56)
        self.module_57 = py_nndct.nn.strided_slice() #RNN1::RNN1/1789(RNN1::nndct_strided_slice_57)
        self.module_58 = py_nndct.nn.Linear(in_features=12, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[x2h]/ret.101(RNN1::nndct_dense_58)
        self.module_59 = py_nndct.nn.Linear(in_features=16, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[h2h]/ret.103(RNN1::nndct_dense_59)
        self.module_60 = py_nndct.nn.Add() #RNN1::RNN1/RNNCell[rnn]/ret.105(RNN1::nndct_elemwise_add_60)
        self.module_61 = py_nndct.nn.Tanh() #RNN1::RNN1/RNNCell[rnn]/ret.107(RNN1::nndct_tanh_61)
        self.module_62 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1816(RNN1::nndct_select_62)
        self.module_63 = py_nndct.nn.strided_slice() #RNN1::RNN1/1821(RNN1::nndct_strided_slice_63)
        self.module_64 = py_nndct.nn.Cat() #RNN1::RNN1/ret.111(RNN1::nndct_concat_64)
        self.module_65 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1834(RNN1::nndct_select_65)
        self.module_66 = py_nndct.nn.strided_slice() #RNN1::RNN1/1839(RNN1::nndct_strided_slice_66)
        self.module_67 = py_nndct.nn.Linear(in_features=12, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[x2h]/ret.119(RNN1::nndct_dense_67)
        self.module_68 = py_nndct.nn.Linear(in_features=16, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[h2h]/ret.121(RNN1::nndct_dense_68)
        self.module_69 = py_nndct.nn.Add() #RNN1::RNN1/RNNCell[rnn]/ret.123(RNN1::nndct_elemwise_add_69)
        self.module_70 = py_nndct.nn.Tanh() #RNN1::RNN1/RNNCell[rnn]/ret.125(RNN1::nndct_tanh_70)
        self.module_71 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1866(RNN1::nndct_select_71)
        self.module_72 = py_nndct.nn.strided_slice() #RNN1::RNN1/1871(RNN1::nndct_strided_slice_72)
        self.module_73 = py_nndct.nn.Cat() #RNN1::RNN1/ret.129(RNN1::nndct_concat_73)
        self.module_74 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1884(RNN1::nndct_select_74)
        self.module_75 = py_nndct.nn.strided_slice() #RNN1::RNN1/1889(RNN1::nndct_strided_slice_75)
        self.module_76 = py_nndct.nn.Linear(in_features=12, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[x2h]/ret.137(RNN1::nndct_dense_76)
        self.module_77 = py_nndct.nn.Linear(in_features=16, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[h2h]/ret.139(RNN1::nndct_dense_77)
        self.module_78 = py_nndct.nn.Add() #RNN1::RNN1/RNNCell[rnn]/ret.141(RNN1::nndct_elemwise_add_78)
        self.module_79 = py_nndct.nn.Tanh() #RNN1::RNN1/RNNCell[rnn]/ret.143(RNN1::nndct_tanh_79)
        self.module_80 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1916(RNN1::nndct_select_80)
        self.module_81 = py_nndct.nn.strided_slice() #RNN1::RNN1/1921(RNN1::nndct_strided_slice_81)
        self.module_82 = py_nndct.nn.Cat() #RNN1::RNN1/ret.147(RNN1::nndct_concat_82)
        self.module_83 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1934(RNN1::nndct_select_83)
        self.module_84 = py_nndct.nn.strided_slice() #RNN1::RNN1/1939(RNN1::nndct_strided_slice_84)
        self.module_85 = py_nndct.nn.Linear(in_features=12, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[x2h]/ret.155(RNN1::nndct_dense_85)
        self.module_86 = py_nndct.nn.Linear(in_features=16, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[h2h]/ret.157(RNN1::nndct_dense_86)
        self.module_87 = py_nndct.nn.Add() #RNN1::RNN1/RNNCell[rnn]/ret.159(RNN1::nndct_elemwise_add_87)
        self.module_88 = py_nndct.nn.Tanh() #RNN1::RNN1/RNNCell[rnn]/ret.161(RNN1::nndct_tanh_88)
        self.module_89 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1966(RNN1::nndct_select_89)
        self.module_90 = py_nndct.nn.strided_slice() #RNN1::RNN1/1971(RNN1::nndct_strided_slice_90)
        self.module_91 = py_nndct.nn.Cat() #RNN1::RNN1/ret.165(RNN1::nndct_concat_91)
        self.module_92 = py_nndct.nn.Module('nndct_select') #RNN1::RNN1/1984(RNN1::nndct_select_92)
        self.module_93 = py_nndct.nn.strided_slice() #RNN1::RNN1/1989(RNN1::nndct_strided_slice_93)
        self.module_94 = py_nndct.nn.Linear(in_features=12, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[x2h]/ret.173(RNN1::nndct_dense_94)
        self.module_95 = py_nndct.nn.Linear(in_features=16, out_features=16, bias=True) #RNN1::RNN1/RNNCell[rnn]/Linear[h2h]/ret.175(RNN1::nndct_dense_95)
        self.module_96 = py_nndct.nn.Add() #RNN1::RNN1/RNNCell[rnn]/ret.177(RNN1::nndct_elemwise_add_96)
        self.module_97 = py_nndct.nn.Tanh() #RNN1::RNN1/RNNCell[rnn]/ret.179(RNN1::nndct_tanh_97)
        self.module_98 = py_nndct.nn.Cat() #RNN1::RNN1/ret.181(RNN1::nndct_concat_98)
        self.module_99 = py_nndct.nn.Module('nndct_squeeze') #RNN1::RNN1/ret.183(RNN1::nndct_squeeze_99)
        self.module_100 = py_nndct.nn.Linear(in_features=16, out_features=12, bias=True) #RNN1::RNN1/Linear[fc2]/ret.185(RNN1::nndct_dense_100)
        self.module_101 = py_nndct.nn.LogSoftmax(dim=-1) #RNN1::RNN1/ret(RNN1::nndct_log_softmax_101)

    @py_nndct.nn.forward_processor
    def forward(self, *args):
        output_module_0 = self.module_0(input=args[0])
        output_module_1 = self.module_1(input=output_module_0, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_1 = self.module_2(input=output_module_1, dim=2, index=0)
        output_module_1 = self.module_3(input=output_module_1, dtype=torch.int64, device='cpu', non_blocking=False, copy=False)
        output_module_4 = self.module_4(input=output_module_0, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_4 = self.module_5(input=output_module_4, dim=2, index=1)
        output_module_4 = self.module_6(input=output_module_4, dtype=torch.int64, device='cpu', non_blocking=False, copy=False)
        output_module_1 = self.module_7(input=output_module_1, dtype=torch.int64, device='cpu', non_blocking=False, copy=False)
        output_module_4 = self.module_8(input=output_module_4, dtype=torch.int64, device='cpu', non_blocking=False, copy=False)
        output_module_1 = self.module_9(output_module_1)
        output_module_4 = self.module_10(output_module_4)
        output_module_1 = self.module_11(dim=-1, tensors=[output_module_1,output_module_4])
        output_module_1 = self.module_12(output_module_1)
        output_module_1 = self.module_13(dims=[1,0,2], input=output_module_1)
        output_module_14 = self.module_14(input=output_module_1, dim=1)
        output_module_14 = self.module_15(size=[output_module_14,16], dtype=torch.float, device='cpu')
        output_module_14 = self.module_16(input=output_module_14, dtype=torch.float, device='cpu', non_blocking=False, copy=False)
        output_module_17 = self.module_17(input=output_module_1, dim=0, index=0)
        output_module_17 = self.module_18(input=output_module_17, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_17 = self.module_19(dim=1, tensors=[output_module_17,output_module_14])
        output_module_20 = self.module_20(input=output_module_1, dim=0, index=0)
        output_module_20 = self.module_21(input=output_module_20, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_20 = self.module_22(output_module_20)
        output_module_23 = self.module_23(output_module_14)
        output_module_20 = self.module_24(input=output_module_20, other=output_module_23, alpha=1)
        output_module_20 = self.module_25(output_module_20)
        output_module_26 = self.module_26(input=output_module_1, dim=0, index=1)
        output_module_26 = self.module_27(input=output_module_26, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_26 = self.module_28(dim=1, tensors=[output_module_26,output_module_20])
        output_module_29 = self.module_29(input=output_module_1, dim=0, index=1)
        output_module_29 = self.module_30(input=output_module_29, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_29 = self.module_31(output_module_29)
        output_module_32 = self.module_32(output_module_20)
        output_module_29 = self.module_33(input=output_module_29, other=output_module_32, alpha=1)
        output_module_29 = self.module_34(output_module_29)
        output_module_35 = self.module_35(input=output_module_1, dim=0, index=2)
        output_module_35 = self.module_36(input=output_module_35, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_35 = self.module_37(dim=1, tensors=[output_module_35,output_module_29])
        output_module_38 = self.module_38(input=output_module_1, dim=0, index=2)
        output_module_38 = self.module_39(input=output_module_38, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_38 = self.module_40(output_module_38)
        output_module_41 = self.module_41(output_module_29)
        output_module_38 = self.module_42(input=output_module_38, other=output_module_41, alpha=1)
        output_module_38 = self.module_43(output_module_38)
        output_module_44 = self.module_44(input=output_module_1, dim=0, index=3)
        output_module_44 = self.module_45(input=output_module_44, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_44 = self.module_46(dim=1, tensors=[output_module_44,output_module_38])
        output_module_47 = self.module_47(input=output_module_1, dim=0, index=3)
        output_module_47 = self.module_48(input=output_module_47, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_47 = self.module_49(output_module_47)
        output_module_50 = self.module_50(output_module_38)
        output_module_47 = self.module_51(input=output_module_47, other=output_module_50, alpha=1)
        output_module_47 = self.module_52(output_module_47)
        output_module_53 = self.module_53(input=output_module_1, dim=0, index=4)
        output_module_53 = self.module_54(input=output_module_53, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_53 = self.module_55(dim=1, tensors=[output_module_53,output_module_47])
        output_module_56 = self.module_56(input=output_module_1, dim=0, index=4)
        output_module_56 = self.module_57(input=output_module_56, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_56 = self.module_58(output_module_56)
        output_module_59 = self.module_59(output_module_47)
        output_module_56 = self.module_60(input=output_module_56, other=output_module_59, alpha=1)
        output_module_56 = self.module_61(output_module_56)
        output_module_62 = self.module_62(input=output_module_1, dim=0, index=5)
        output_module_62 = self.module_63(input=output_module_62, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_62 = self.module_64(dim=1, tensors=[output_module_62,output_module_56])
        output_module_65 = self.module_65(input=output_module_1, dim=0, index=5)
        output_module_65 = self.module_66(input=output_module_65, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_65 = self.module_67(output_module_65)
        output_module_68 = self.module_68(output_module_56)
        output_module_65 = self.module_69(input=output_module_65, other=output_module_68, alpha=1)
        output_module_65 = self.module_70(output_module_65)
        output_module_71 = self.module_71(input=output_module_1, dim=0, index=6)
        output_module_71 = self.module_72(input=output_module_71, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_71 = self.module_73(dim=1, tensors=[output_module_71,output_module_65])
        output_module_74 = self.module_74(input=output_module_1, dim=0, index=6)
        output_module_74 = self.module_75(input=output_module_74, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_74 = self.module_76(output_module_74)
        output_module_77 = self.module_77(output_module_65)
        output_module_74 = self.module_78(input=output_module_74, other=output_module_77, alpha=1)
        output_module_74 = self.module_79(output_module_74)
        output_module_80 = self.module_80(input=output_module_1, dim=0, index=7)
        output_module_80 = self.module_81(input=output_module_80, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_80 = self.module_82(dim=1, tensors=[output_module_80,output_module_74])
        output_module_83 = self.module_83(input=output_module_1, dim=0, index=7)
        output_module_83 = self.module_84(input=output_module_83, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_83 = self.module_85(output_module_83)
        output_module_86 = self.module_86(output_module_74)
        output_module_83 = self.module_87(input=output_module_83, other=output_module_86, alpha=1)
        output_module_83 = self.module_88(output_module_83)
        output_module_89 = self.module_89(input=output_module_1, dim=0, index=8)
        output_module_89 = self.module_90(input=output_module_89, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_89 = self.module_91(dim=1, tensors=[output_module_89,output_module_83])
        output_module_92 = self.module_92(input=output_module_1, dim=0, index=8)
        output_module_92 = self.module_93(input=output_module_92, dim=[0,1], start=[0,0], end=[9223372036854775807,9223372036854775807], step=[1,1])
        output_module_92 = self.module_94(output_module_92)
        output_module_95 = self.module_95(output_module_83)
        output_module_92 = self.module_96(input=output_module_92, other=output_module_95, alpha=1)
        output_module_92 = self.module_97(output_module_92)
        output_module_17 = self.module_98(dim=0, tensors=[output_module_17,output_module_26,output_module_35,output_module_44,output_module_53,output_module_62,output_module_71,output_module_80,output_module_89])
        output_module_92 = self.module_99(input=output_module_92)
        output_module_92 = self.module_100(output_module_92)
        output_module_92 = self.module_101(output_module_92)
        return (output_module_92,output_module_17)
